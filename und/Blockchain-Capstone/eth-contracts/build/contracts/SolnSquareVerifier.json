{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "ownerShipTransfered",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "_setTokenURI",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBaseTokenUri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSymbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ownerShipTransfered\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"_setTokenURI\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBaseTokenUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x0b36d0d471fda56e73336a6219155a98cf578c168c38d0429204bd1bff2d2a08\",\"urls\":[\"bzz-raw://cfa11720d744dbe3049bd022070e0935c8e6ee84c55c31d8c3990ccff500e344\",\"dweb:/ipfs/QmaV579GrDEZNxNWWvkvunowFbF7rwpWJxZjLL4F72tWaq\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x581a25670336edd0fa3ec7f0faa9b443ce01df47b1df7f7b7a37bfdbe5f31127\",\"urls\":[\"bzz-raw://17ab7b6c28451b2c6671b60d9b389ad6e4c16d462074ba4e7cbef2a0eaa7f699\",\"dweb:/ipfs/QmUAJRgUU2jaype8E294pGVe9e3AC9bJTNxKDCBiBAjfbv\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0x9567f4bffcdddc9d90819867e1c071bfa631e2f44c8fc6341719f150061e3a41\",\"urls\":[\"bzz-raw://4e53bcd713543e503dd204a9ec967d7355afcc61fa029b773a65184adba913a4\",\"dweb:/ipfs/QmTAC86qURoE3phUUUiRR2c51hiHVnF4ceyDLseHw7mK1Z\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600e81526020017f4d696e7461626c65546f6b656e730000000000000000000000000000000000008152506040518060400160405280600781526020017f4d544f4b454e53000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162004581603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff021916908315150217905550620000fc6301ffc9a760e01b6200019860201b60201c565b620001146380ac58cd60e01b6200019860201b60201c565b6200012c63780e9d6360e01b6200019860201b60201c565b82600f90805190602001906200014492919062000238565b5081601090805190602001906200015d92919062000238565b5080601190805190602001906200017692919062000238565b506200018f635b5e139f60e01b6200019860201b60201c565b505050620002e7565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620001cc57600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200027b57805160ff1916838001178555620002ac565b82800160010185558215620002ac579182015b82811115620002ab5782518255916020019190600101906200028e565b5b509050620002bb9190620002bf565b5090565b620002e491905b80821115620002e0576000816000905550600101620002c6565b5090565b90565b61428a80620002f76000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806340c10f19116100de57806370a0823111610097578063c87b56dd11610071578063c87b56dd146104a3578063ce606ee0146104d3578063e985e9c5146104f1578063f2fde38b146105215761018e565b806370a082311461043b578063a22cb4651461046b578063b88d4fde146104875761018e565b806340c10f191461034157806342842e0e146103715780634bbe847d1461038d5780634f6ccce7146103ab578063621e9ec0146103db5780636352211e1461040b5761018e565b806318160ddd1161014b5780632e4b7ec2116101255780632e4b7ec2146102bd5780632f745c59146102d957806338bbfa50146103095780633eec14da146103255761018e565b806318160ddd1461026757806323b872dd1461028557806327dc297e146102a15761018e565b806301ffc9a714610193578063081812fc146101c3578063095ea7b3146101f3578063150704011461020f57806316c38b3c1461022d57806317d7de7c14610249575b600080fd5b6101ad60048036036101a891908101906137e2565b61053d565b6040516101ba9190613d99565b60405180910390f35b6101dd60048036036101d89190810190613834565b6105a5565b6040516101ea9190613cee565b60405180910390f35b61020d600480360361020891908101906135b9565b6105e2565b005b61021761071d565b6040516102249190613deb565b60405180910390f35b610247600480360361024291908101906136e6565b6107bf565b005b6102516108be565b60405161025e9190613deb565b60405180910390f35b61026f610960565b60405161027c9190613ecd565b60405180910390f35b61029f600480360361029a91908101906134b3565b61096d565b005b6102bb60048036036102b6919081019061370f565b610990565b005b6102d760048036036102d29190810190613834565b6109d3565b005b6102f360048036036102ee91908101906135b9565b610abb565b6040516103009190613ecd565b60405180910390f35b610323600480360361031e9190810190613763565b610b2e565b005b61033f600480360361033a91908101906135f5565b610b33565b005b61035b600480360361035691908101906135b9565b610d38565b6040516103689190613d99565b60405180910390f35b61038b600480360361038691908101906134b3565b610df1565b005b610395610e11565b6040516103a29190613deb565b60405180910390f35b6103c560048036036103c09190810190613834565b610eb3565b6040516103d29190613ecd565b60405180910390f35b6103f560048036036103f09190810190613681565b610ee7565b6040516104029190613d99565b60405180910390f35b61042560048036036104209190810190613834565b611118565b6040516104329190613cee565b60405180910390f35b6104556004803603610450919081019061344e565b611155565b6040516104629190613ecd565b60405180910390f35b6104856004803603610480919081019061357d565b6111a5565b005b6104a1600480360361049c9190810190613502565b6112db565b005b6104bd60048036036104b89190810190613834565b611301565b6040516104ca9190613deb565b60405180910390f35b6104db6113c8565b6040516104e89190613cee565b60405180910390f35b61050b60048036036105069190810190613477565b6113f1565b6040516105189190613d99565b60405180910390f35b61053b6004803603610536919081019061344e565b611485565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6105eb81611118565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090613ead565b60405180910390fd5b61066333826115f1565b61066c57600080fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107b55780601f1061078a576101008083540402835291602001916107b5565b820191906000526020600020905b81548152906001019060200180831161079857829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461081857600080fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610883577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516108769190613d09565b60405180910390a16108bb565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516108b29190613d09565b60405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109565780601f1061092b57610100808354040283529160200191610956565b820191906000526020600020905b81548152906001019060200180831161093957829003601f168201915b5050505050905090565b6000600880549050905090565b61097733826115f1565b61098057600080fd5b61098b838383611686565b505050565b6109cf828260006040519080825280601f01601f1916602001820160405280156109c95781602001600182028038833980820191505090505b50610b2e565b5050565b6109dc816116aa565b6109e557600080fd5b610a9160118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7e5780601f10610a5357610100808354040283529160200191610a7e565b820191906000526020600020905b815481529060010190602001808311610a6157829003601f168201915b5050505050610a8c8361171c565b611849565b601260008381526020019081526020016000209080519060200190610ab7929190612f65565b5050565b6000610ac683611155565b8210610ad157600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b1b57fe5b9060005260206000200154905092915050565b505050565b6000858786868686604051602001610b5096959493929190613c7e565b6040516020818303038152906040528051906020012090506014600082815260200190815260200160002060009054906101000a900460ff1615610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc090613e2d565b60405180910390fd5b6000610bd786868686610ee7565b905080610c19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1090613e0d565b60405180910390fd5b610c21612fe5565b60405180606001604052808481526020018981526020018a73ffffffffffffffffffffffffffffffffffffffff16815250905080601360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd54d9ef5d3801dc9b4c79ac9cb0d5ed3b9c83d168bd86bb6e937ca7df70392da838a8a604051610d2593929190613db4565b60405180910390a1505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166013600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ddf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd690613e2d565b60405180910390fd5b610de9838361188d565b905092915050565b610e0c838383604051806020016040528060008152506112db565b505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ea95780601f10610e7e57610100808354040283529160200191610ea9565b820191906000526020600020905b815481529060010190602001808311610e8c57829003601f168201915b5050505050905090565b6000610ebd610960565b8210610ec857600080fd5b60088281548110610ed557fe5b90600052602060002001549050919050565b6000610ef161301f565b604051806040016040528087600060028110610f0957fe5b6020020151815260200187600160028110610f2057fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110610f5357fe5b6020020151600060028110610f6457fe5b6020020151815260200188600060028110610f7b57fe5b6020020151600160028110610f8c57fe5b60200201518152508152602001604051806040016040528088600160028110610fb157fe5b6020020151600060028110610fc257fe5b6020020151815260200188600160028110610fd957fe5b6020020151600160028110610fea57fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061101557fe5b602002015181526020018560016002811061102c57fe5b602002015181525081604001819052506060600260405190808252806020026020018201604052801561106e5781602001602082028038833980820191505090505b50905060008090505b60028110156110b65784816002811061108c57fe5b602002015182828151811061109d57fe5b6020026020010181815250508080600101915050611077565b5060006110c38284611905565b1415611109577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040516110f690613e8d565b60405180910390a1600192505050611110565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061119e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a77565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111de57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112cf9190613d99565b60405180910390a35050565b6112e684848461096d565b6112f284848484611a85565b6112fb57600080fd5b50505050565b606061130c826116aa565b61131557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113bc5780601f10611391576101008083540402835291602001916113bc565b820191906000526020600020905b81548152906001019060200180831161139f57829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114de57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561154e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154590613e6d565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff3bcb778d34a4721d91e8b6fbfdd84afa134acaead1870b7859dfda5b1c1801c81836040516115e5929190613d70565b60405180910390a15050565b6000806115fd83611118565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061166c57508373ffffffffffffffffffffffffffffffffffffffff16611654846105a5565b73ffffffffffffffffffffffffffffffffffffffff16145b8061167d575061167c81856113f1565b5b91505092915050565b611691838383611b9c565b61169b8382611d7a565b6116a58282611f18565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60606000821415611764576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611844565b600082905060005b6000821461178e578080600101915050600a828161178657fe5b04915061176c565b6060816040519080825280601f01601f1916602001820160405280156117c35781602001600182028038833980820191505090505b50905060006001830390505b6000861461183c57600a86816117e157fe5b0660300160f81b828280600190039350815181106117fb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161183457fe5b0495506117cf565b819450505050505b919050565b60606118858383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250611fdf565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118e857600080fd5b6118f283836122a1565b6118fb826109d3565b6001905092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050611933613052565b61193b6122c2565b905080608001515160018651011461195257600080fd5b61195a613099565b6040518060400160405280600081526020016000815250905060008090505b86518110156119f0578387828151811061198f57fe5b6020026020010151106119a157600080fd5b6119e1826119dc856080015160018501815181106119bb57fe5b60200260200101518a85815181106119cf57fe5b602002602001015161270f565b6127a3565b91508080600101915050611979565b50611a13818360800151600081518110611a0657fe5b60200260200101516127a3565b9050611a5985600001518660200151611a2b84612856565b8560400151611a3d8a60400151612856565b8760600151611a4f8960000151612856565b89602001516128f0565b611a695760019350505050611a71565b600093505050505b92915050565b600081600001549050919050565b6000611aa68473ffffffffffffffffffffffffffffffffffffffff16612a54565b611ab35760019050611b94565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611af49493929190613d24565b602060405180830381600087803b158015611b0e57600080fd5b505af1158015611b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b46919081019061380b565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b611ba683826115f1565b611baf57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611be757600080fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611cd3600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a9f565b611d1a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ac2565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611dd26001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612ad890919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611ebf576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611e3f57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611e9757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611f1191906130b3565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561203b5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156120c05788818151811061206757fe5b602001015160f81c60f81b83838060010194508151811061208457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612052565b600090505b8751811015612133578781815181106120da57fe5b602001015160f81c60f81b8383806001019450815181106120f757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506120c5565b600090505b86518110156121a65786818151811061214d57fe5b602001015160f81c60f81b83838060010194508151811061216a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612138565b600090505b8551811015612219578581815181106121c057fe5b602001015160f81c60f81b8383806001019450815181106121dd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121ab565b600090505b845181101561228c5784818151811061223357fe5b602001015160f81c60f81b83838060010194508151811061225057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061221e565b82995050505050505050505095945050505050565b6122ab8282612b22565b6122b58282611f18565b6122be81612c69565b5050565b6122ca613052565b60405180604001604052807f05bc585daa1e59293f8f2ed9cfe573e0f6fdaa4fb5d2a396a39ac1ceba6398fc81526020017f0a4b4dab31e8d289418dea2e8c694d524ee322a51641a7a7b604d7712b60fd728152508160000181905250604051806040016040528060405180604001604052807f2159d188ee477ff6501f0ba55b3ccf38072a9ec31b209f5c24794d2b61728f0a81526020017f18206f7abe92dc3bd7a44da6faae3eec4036b99c8869fee576d7d769b016897e815250815260200160405180604001604052807f18ea5a140eb6992ba8808cae93fbd0d09366a76cfe73f1b57e6dbc252a4fef0681526020017f0b3823ffcdcf9232d2108061be21be4735183561e8223f0a43be665e99ff1ffd8152508152508160200181905250604051806040016040528060405180604001604052807f18d9477ebbd39d14a0a6508ef233f80375836e2a51d58c756225514d4d74f3d681526020017f116335003bd35adb08a9ec2895b3dcaee5eb2c8d51a3adbde5bef33e19e9c42b815250815260200160405180604001604052807f0b1c2cdc4f6ddefe2c28799e3614b069c9008170eacbb26946032ab35f68d60981526020017f0f599ada312a5826f3cce89a4e996317ff209c2744e0d4e37f049a36ebfca2a68152508152508160400181905250604051806040016040528060405180604001604052807f280e0d66cfea9ab3d130ef6c7b2e52d596e57bb6ac8f69b7ff49bbcdd7ef0df981526020017f034f0bd73a9d774e5c271ceec6e42ea7c1dbe113568bdd6cd21d7a7cea0b3704815250815260200160405180604001604052807f12b824df068d35c19b2d3a40e510e7d4f7f447fb77fea4e531f84b243a34f91a81526020017f2d7f8a84dcc1de5eebca5cc3a7bd7ee3fae7091b57e3979c4381b6cdab4c74b4815250815250816060018190525060036040519080825280602002602001820160405280156125b157816020015b61259e6130df565b8152602001906001900390816125965790505b50816080018190525060405180604001604052807f2363aa942b7904eede22e46cf05b5c6d2b98fd65eed899496e2ce3185abcdf1881526020017f2290f6d9f00377df996ab25406dfad62e893811227d8d6d4e13199c3d6f8ae99815250816080015160008151811061262057fe5b602002602001018190525060405180604001604052807f0484cf95b5c33f20f70b17bfb58df3437885ad08eba364bb519e227980f145d881526020017f3030d1bdf5beb65669a538808f10e44670575986b99a6512e9f1a93dea90f7a1815250816080015160018151811061269157fe5b602002602001018190525060405180604001604052807ef36198513b8139e126a7ec50e5c0eae987d72396e1e5667d754276c105bc6781526020017f0403afbc865c36d609451b3ed719b6c85c5559e67568b3f3d52fc8da3abf1246815250816080015160028151811061270157fe5b602002602001018190525090565b612717613099565b61271f6130f9565b83600001518160006003811061273157fe5b60200201818152505083602001518160016003811061274c57fe5b602002018181525050828160026003811061276357fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461278e57612790565bfe5b508061279b57600080fd5b505092915050565b6127ab613099565b6127b361311b565b8360000151816000600481106127c557fe5b6020020181815250508360200151816001600481106127e057fe5b6020020181815250508260000151816002600481106127fb57fe5b60200201818152505082602001518160036004811061281657fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461284157612843565bfe5b508061284e57600080fd5b505092915050565b61285e613099565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561289b575060008360200151145b156128bf5760405180604001604052806000815260200160008152509150506128eb565b604051806040016040528084600001518152602001828560200151816128e157fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561292f57816020015b61291c6130df565b8152602001906001900390816129145790505b5090506060600460405190808252806020026020018201604052801561296f57816020015b61295c61313d565b8152602001906001900390816129545790505b5090508a8260008151811061298057fe5b6020026020010181905250888260018151811061299957fe5b602002602001018190525086826002815181106129b257fe5b602002602001018190525084826003815181106129cb57fe5b602002602001018190525089816000815181106129e457fe5b602002602001018190525087816001815181106129fd57fe5b60200260200101819052508581600281518110612a1657fe5b60200260200101819052508381600381518110612a2f57fe5b6020026020010181905250612a448282612cb5565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612a9657506000801b8214155b92505050919050565b612ab760018260000154612ad890919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b1a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612f0a565b905092915050565b60001515612b2f826116aa565b151514612b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b6890613e4d565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c0a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ac2565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008151835114612cc557600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612d045781602001602082028038833980820191505090505b50905060008090505b83811015612eaa57868181518110612d2157fe5b602002602001015160000151826000600684020181518110612d3f57fe5b602002602001018181525050868181518110612d5757fe5b602002602001015160200151826001600684020181518110612d7557fe5b602002602001018181525050858181518110612d8d57fe5b602002602001015160000151600060028110612da557fe5b6020020151826002600684020181518110612dbc57fe5b602002602001018181525050858181518110612dd457fe5b602002602001015160000151600160028110612dec57fe5b6020020151826003600684020181518110612e0357fe5b602002602001018181525050858181518110612e1b57fe5b602002602001015160200151600060028110612e3357fe5b6020020151826004600684020181518110612e4a57fe5b602002602001018181525050858181518110612e6257fe5b602002602001015160200151600160028110612e7a57fe5b6020020151826005600684020181518110612e9157fe5b6020026020010181815250508080600101915050612d0d565b50612eb3613163565b60006020826020860260208601600060086107d05a03f190508060008114612eda57612edc565bfe5b5080612ee757600080fd5b600082600060018110612ef657fe5b602002015114159550505050505092915050565b6000838311158290612f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f499190613deb565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612fa657805160ff1916838001178555612fd4565b82800160010185558215612fd4579182015b82811115612fd3578251825591602001919060010190612fb8565b5b509050612fe19190613185565b5090565b60405180606001604052806000801916815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60405180606001604052806130326130df565b815260200161303f61313d565b815260200161304c6130df565b81525090565b6040518060a001604052806130656130df565b815260200161307261313d565b815260200161307f61313d565b815260200161308c61313d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156130da578183600052602060002091820191016130d99190613185565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806131506131aa565b815260200161315d6131aa565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6131a791905b808211156131a357600081600090555060010161318b565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b6000813590506131db816141d4565b92915050565b600082601f8301126131f257600080fd5b600261320561320082613f15565b613ee8565b9150818385604084028201111561321b57600080fd5b60005b8381101561324b57816132318882613255565b84526020840193506040830192505060018101905061321e565b5050505092915050565b600082601f83011261326657600080fd5b600261327961327482613f37565b613ee8565b9150818385602084028201111561328f57600080fd5b60005b838110156132bf57816132a58882613439565b845260208401935060208301925050600181019050613292565b5050505092915050565b600082601f8301126132da57600080fd5b60026132ed6132e882613f59565b613ee8565b9150818385602084028201111561330357600080fd5b60005b8381101561333357816133198882613439565b845260208401935060208301925050600181019050613306565b5050505092915050565b60008135905061334c816141eb565b92915050565b60008135905061336181614202565b92915050565b60008135905061337681614219565b92915050565b60008151905061338b81614219565b92915050565b600082601f8301126133a257600080fd5b81356133b56133b082613f7b565b613ee8565b915080825260208301602083018583830111156133d157600080fd5b6133dc838284614146565b50505092915050565b600082601f8301126133f657600080fd5b813561340961340482613fa7565b613ee8565b9150808252602083016020830185838301111561342557600080fd5b613430838284614146565b50505092915050565b60008135905061344881614230565b92915050565b60006020828403121561346057600080fd5b600061346e848285016131cc565b91505092915050565b6000806040838503121561348a57600080fd5b6000613498858286016131cc565b92505060206134a9858286016131cc565b9150509250929050565b6000806000606084860312156134c857600080fd5b60006134d6868287016131cc565b93505060206134e7868287016131cc565b92505060406134f886828701613439565b9150509250925092565b6000806000806080858703121561351857600080fd5b6000613526878288016131cc565b9450506020613537878288016131cc565b935050604061354887828801613439565b925050606085013567ffffffffffffffff81111561356557600080fd5b61357187828801613391565b91505092959194509250565b6000806040838503121561359057600080fd5b600061359e858286016131cc565b92505060206135af8582860161333d565b9150509250929050565b600080604083850312156135cc57600080fd5b60006135da858286016131cc565b92505060206135eb85828601613439565b9150509250929050565b600080600080600080610180878903121561360f57600080fd5b600061361d89828a016131cc565b965050602061362e89828a01613439565b955050604061363f89828a016132c9565b945050608061365089828a016131e1565b93505061010061366289828a016132c9565b92505061014061367489828a016132c9565b9150509295509295509295565b600080600080610140858703121561369857600080fd5b60006136a6878288016132c9565b94505060406136b7878288016131e1565b93505060c06136c8878288016132c9565b9250506101006136da878288016132c9565b91505092959194509250565b6000602082840312156136f857600080fd5b60006137068482850161333d565b91505092915050565b6000806040838503121561372257600080fd5b600061373085828601613352565b925050602083013567ffffffffffffffff81111561374d57600080fd5b613759858286016133e5565b9150509250929050565b60008060006060848603121561377857600080fd5b600061378686828701613352565b935050602084013567ffffffffffffffff8111156137a357600080fd5b6137af868287016133e5565b925050604084013567ffffffffffffffff8111156137cc57600080fd5b6137d886828701613391565b9150509250925092565b6000602082840312156137f457600080fd5b600061380284828501613367565b91505092915050565b60006020828403121561381d57600080fd5b600061382b8482850161337c565b91505092915050565b60006020828403121561384657600080fd5b600061385484828501613439565b91505092915050565b60006138698383613970565b60408301905092915050565b60006138818383613c58565b60208301905092915050565b61389681614110565b82525050565b6138a581614092565b82525050565b6138bc6138b782614092565b614188565b82525050565b6138cb81613ff1565b6138d5818461404f565b92506138e082613fd3565b8060005b838110156139115781516138f8878261385d565b965061390383614028565b9250506001810190506138e4565b505050505050565b61392281614007565b61392c8184614065565b925061393782613fe7565b8060005b8381101561396857815161394f8782613875565b965061395a83614042565b92505060018101905061393b565b505050505050565b61397981613ffc565b613983818461405a565b925061398e82613fdd565b8060005b838110156139bf5781516139a68782613875565b96506139b183614035565b925050600181019050613992565b505050505050565b6139d0816140a4565b82525050565b6139df816140b0565b82525050565b60006139f082614012565b6139fa8185614070565b9350613a0a818560208601614155565b613a13816141b6565b840191505092915050565b6000613a298261401d565b613a338185614081565b9350613a43818560208601614155565b613a4c816141b6565b840191505092915050565b6000613a64601683614081565b91507f5468652070726f6f66206973206e6f742076616c6964000000000000000000006000830152602082019050919050565b6000613aa4602183614081565b91507f54686520736f6c7574696f6e20686173206265656e2075736564206265666f7260008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613b0a601483614081565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613b4a602083614081565b91507f4e6577206f776e6572206d7573742062652061207265616c20616464726573736000830152602082019050919050565b6000613b8a602283614081565b91507f5472616e73616374696f6e207375636365737366756c6c79207665726966696560008301527f642e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613bf0602483614081565b91507f546f6b656e20697320616c7265616479206f776e6564206279206f776e65722060008301527f2d20746f000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b613c5281614106565b82525050565b613c6181614106565b82525050565b613c78613c7382614106565b6141ac565b82525050565b6000613c8a8289613c67565b602082019150613c9a82886138ab565b601482019150613caa8287613919565b604082019150613cba82866138c2565b608082019150613cca8285613919565b604082019150613cda8284613919565b604082019150819050979650505050505050565b6000602082019050613d03600083018461389c565b92915050565b6000602082019050613d1e600083018461388d565b92915050565b6000608082019050613d39600083018761388d565b613d46602083018661389c565b613d536040830185613c49565b8181036060830152613d6581846139e5565b905095945050505050565b6000604082019050613d85600083018561389c565b613d92602083018461389c565b9392505050565b6000602082019050613dae60008301846139c7565b92915050565b6000606082019050613dc960008301866139d6565b613dd6602083018561389c565b613de36040830184613c49565b949350505050565b60006020820190508181036000830152613e058184613a1e565b905092915050565b60006020820190508181036000830152613e2681613a57565b9050919050565b60006020820190508181036000830152613e4681613a97565b9050919050565b60006020820190508181036000830152613e6681613afd565b9050919050565b60006020820190508181036000830152613e8681613b3d565b9050919050565b60006020820190508181036000830152613ea681613b7d565b9050919050565b60006020820190508181036000830152613ec681613be3565b9050919050565b6000602082019050613ee26000830184613c49565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613f0b57600080fd5b8060405250919050565b600067ffffffffffffffff821115613f2c57600080fd5b602082029050919050565b600067ffffffffffffffff821115613f4e57600080fd5b602082029050919050565b600067ffffffffffffffff821115613f7057600080fd5b602082029050919050565b600067ffffffffffffffff821115613f9257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613fbe57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061409d826140e6565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061411b82614122565b9050919050565b600061412d82614134565b9050919050565b600061413f826140e6565b9050919050565b82818337600083830152505050565b60005b83811015614173578082015181840152602081019050614158565b83811115614182576000848401525b50505050565b60006141938261419a565b9050919050565b60006141a5826141c7565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b6141dd81614092565b81146141e857600080fd5b50565b6141f4816140a4565b81146141ff57600080fd5b50565b61420b816140b0565b811461421657600080fd5b50565b614222816140ba565b811461422d57600080fd5b50565b61423981614106565b811461424457600080fd5b5056fea365627a7a72315820a53d757a46575096fc7fd5cc4627b8816ff1e4425b1a2d3e1f29e04bc3f9686d6c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c806340c10f19116100de57806370a0823111610097578063c87b56dd11610071578063c87b56dd146104a3578063ce606ee0146104d3578063e985e9c5146104f1578063f2fde38b146105215761018e565b806370a082311461043b578063a22cb4651461046b578063b88d4fde146104875761018e565b806340c10f191461034157806342842e0e146103715780634bbe847d1461038d5780634f6ccce7146103ab578063621e9ec0146103db5780636352211e1461040b5761018e565b806318160ddd1161014b5780632e4b7ec2116101255780632e4b7ec2146102bd5780632f745c59146102d957806338bbfa50146103095780633eec14da146103255761018e565b806318160ddd1461026757806323b872dd1461028557806327dc297e146102a15761018e565b806301ffc9a714610193578063081812fc146101c3578063095ea7b3146101f3578063150704011461020f57806316c38b3c1461022d57806317d7de7c14610249575b600080fd5b6101ad60048036036101a891908101906137e2565b61053d565b6040516101ba9190613d99565b60405180910390f35b6101dd60048036036101d89190810190613834565b6105a5565b6040516101ea9190613cee565b60405180910390f35b61020d600480360361020891908101906135b9565b6105e2565b005b61021761071d565b6040516102249190613deb565b60405180910390f35b610247600480360361024291908101906136e6565b6107bf565b005b6102516108be565b60405161025e9190613deb565b60405180910390f35b61026f610960565b60405161027c9190613ecd565b60405180910390f35b61029f600480360361029a91908101906134b3565b61096d565b005b6102bb60048036036102b6919081019061370f565b610990565b005b6102d760048036036102d29190810190613834565b6109d3565b005b6102f360048036036102ee91908101906135b9565b610abb565b6040516103009190613ecd565b60405180910390f35b610323600480360361031e9190810190613763565b610b2e565b005b61033f600480360361033a91908101906135f5565b610b33565b005b61035b600480360361035691908101906135b9565b610d38565b6040516103689190613d99565b60405180910390f35b61038b600480360361038691908101906134b3565b610df1565b005b610395610e11565b6040516103a29190613deb565b60405180910390f35b6103c560048036036103c09190810190613834565b610eb3565b6040516103d29190613ecd565b60405180910390f35b6103f560048036036103f09190810190613681565b610ee7565b6040516104029190613d99565b60405180910390f35b61042560048036036104209190810190613834565b611118565b6040516104329190613cee565b60405180910390f35b6104556004803603610450919081019061344e565b611155565b6040516104629190613ecd565b60405180910390f35b6104856004803603610480919081019061357d565b6111a5565b005b6104a1600480360361049c9190810190613502565b6112db565b005b6104bd60048036036104b89190810190613834565b611301565b6040516104ca9190613deb565b60405180910390f35b6104db6113c8565b6040516104e89190613cee565b60405180910390f35b61050b60048036036105069190810190613477565b6113f1565b6040516105189190613d99565b60405180910390f35b61053b6004803603610536919081019061344e565b611485565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6105eb81611118565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090613ead565b60405180910390fd5b61066333826115f1565b61066c57600080fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107b55780601f1061078a576101008083540402835291602001916107b5565b820191906000526020600020905b81548152906001019060200180831161079857829003601f168201915b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461081857600080fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610883577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516108769190613d09565b60405180910390a16108bb565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516108b29190613d09565b60405180910390a15b50565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109565780601f1061092b57610100808354040283529160200191610956565b820191906000526020600020905b81548152906001019060200180831161093957829003601f168201915b5050505050905090565b6000600880549050905090565b61097733826115f1565b61098057600080fd5b61098b838383611686565b505050565b6109cf828260006040519080825280601f01601f1916602001820160405280156109c95781602001600182028038833980820191505090505b50610b2e565b5050565b6109dc816116aa565b6109e557600080fd5b610a9160118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a7e5780601f10610a5357610100808354040283529160200191610a7e565b820191906000526020600020905b815481529060010190602001808311610a6157829003601f168201915b5050505050610a8c8361171c565b611849565b601260008381526020019081526020016000209080519060200190610ab7929190612f65565b5050565b6000610ac683611155565b8210610ad157600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610b1b57fe5b9060005260206000200154905092915050565b505050565b6000858786868686604051602001610b5096959493929190613c7e565b6040516020818303038152906040528051906020012090506014600082815260200190815260200160002060009054906101000a900460ff1615610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc090613e2d565b60405180910390fd5b6000610bd786868686610ee7565b905080610c19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1090613e0d565b60405180910390fd5b610c21612fe5565b60405180606001604052808481526020018981526020018a73ffffffffffffffffffffffffffffffffffffffff16815250905080601360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd54d9ef5d3801dc9b4c79ac9cb0d5ed3b9c83d168bd86bb6e937ca7df70392da838a8a604051610d2593929190613db4565b60405180910390a1505050505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff166013600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ddf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd690613e2d565b60405180910390fd5b610de9838361188d565b905092915050565b610e0c838383604051806020016040528060008152506112db565b505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ea95780601f10610e7e57610100808354040283529160200191610ea9565b820191906000526020600020905b815481529060010190602001808311610e8c57829003601f168201915b5050505050905090565b6000610ebd610960565b8210610ec857600080fd5b60088281548110610ed557fe5b90600052602060002001549050919050565b6000610ef161301f565b604051806040016040528087600060028110610f0957fe5b6020020151815260200187600160028110610f2057fe5b602002015181525081600001819052506040518060400160405280604051806040016040528088600060028110610f5357fe5b6020020151600060028110610f6457fe5b6020020151815260200188600060028110610f7b57fe5b6020020151600160028110610f8c57fe5b60200201518152508152602001604051806040016040528088600160028110610fb157fe5b6020020151600060028110610fc257fe5b6020020151815260200188600160028110610fd957fe5b6020020151600160028110610fea57fe5b6020020151815250815250816020018190525060405180604001604052808560006002811061101557fe5b602002015181526020018560016002811061102c57fe5b602002015181525081604001819052506060600260405190808252806020026020018201604052801561106e5781602001602082028038833980820191505090505b50905060008090505b60028110156110b65784816002811061108c57fe5b602002015182828151811061109d57fe5b6020026020010181815250508080600101915050611077565b5060006110c38284611905565b1415611109577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040516110f690613e8d565b60405180910390a1600192505050611110565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061119e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611a77565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111de57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112cf9190613d99565b60405180910390a35050565b6112e684848461096d565b6112f284848484611a85565b6112fb57600080fd5b50505050565b606061130c826116aa565b61131557600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113bc5780601f10611391576101008083540402835291602001916113bc565b820191906000526020600020905b81548152906001019060200180831161139f57829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114de57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561154e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154590613e6d565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff3bcb778d34a4721d91e8b6fbfdd84afa134acaead1870b7859dfda5b1c1801c81836040516115e5929190613d70565b60405180910390a15050565b6000806115fd83611118565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061166c57508373ffffffffffffffffffffffffffffffffffffffff16611654846105a5565b73ffffffffffffffffffffffffffffffffffffffff16145b8061167d575061167c81856113f1565b5b91505092915050565b611691838383611b9c565b61169b8382611d7a565b6116a58282611f18565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60606000821415611764576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611844565b600082905060005b6000821461178e578080600101915050600a828161178657fe5b04915061176c565b6060816040519080825280601f01601f1916602001820160405280156117c35781602001600182028038833980820191505090505b50905060006001830390505b6000861461183c57600a86816117e157fe5b0660300160f81b828280600190039350815181106117fb57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161183457fe5b0495506117cf565b819450505050505b919050565b60606118858383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250611fdf565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118e857600080fd5b6118f283836122a1565b6118fb826109d3565b6001905092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050611933613052565b61193b6122c2565b905080608001515160018651011461195257600080fd5b61195a613099565b6040518060400160405280600081526020016000815250905060008090505b86518110156119f0578387828151811061198f57fe5b6020026020010151106119a157600080fd5b6119e1826119dc856080015160018501815181106119bb57fe5b60200260200101518a85815181106119cf57fe5b602002602001015161270f565b6127a3565b91508080600101915050611979565b50611a13818360800151600081518110611a0657fe5b60200260200101516127a3565b9050611a5985600001518660200151611a2b84612856565b8560400151611a3d8a60400151612856565b8760600151611a4f8960000151612856565b89602001516128f0565b611a695760019350505050611a71565b600093505050505b92915050565b600081600001549050919050565b6000611aa68473ffffffffffffffffffffffffffffffffffffffff16612a54565b611ab35760019050611b94565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401611af49493929190613d24565b602060405180830381600087803b158015611b0e57600080fd5b505af1158015611b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b46919081019061380b565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b611ba683826115f1565b611baf57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611be757600080fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611cd3600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612a9f565b611d1a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ac2565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611dd26001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612ad890919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611ebf576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611e3f57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611e9757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611f1191906130b3565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f19166020018201604052801561203b5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156120c05788818151811061206757fe5b602001015160f81c60f81b83838060010194508151811061208457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612052565b600090505b8751811015612133578781815181106120da57fe5b602001015160f81c60f81b8383806001019450815181106120f757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506120c5565b600090505b86518110156121a65786818151811061214d57fe5b602001015160f81c60f81b83838060010194508151811061216a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612138565b600090505b8551811015612219578581815181106121c057fe5b602001015160f81c60f81b8383806001019450815181106121dd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506121ab565b600090505b845181101561228c5784818151811061223357fe5b602001015160f81c60f81b83838060010194508151811061225057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061221e565b82995050505050505050505095945050505050565b6122ab8282612b22565b6122b58282611f18565b6122be81612c69565b5050565b6122ca613052565b60405180604001604052807f05bc585daa1e59293f8f2ed9cfe573e0f6fdaa4fb5d2a396a39ac1ceba6398fc81526020017f0a4b4dab31e8d289418dea2e8c694d524ee322a51641a7a7b604d7712b60fd728152508160000181905250604051806040016040528060405180604001604052807f2159d188ee477ff6501f0ba55b3ccf38072a9ec31b209f5c24794d2b61728f0a81526020017f18206f7abe92dc3bd7a44da6faae3eec4036b99c8869fee576d7d769b016897e815250815260200160405180604001604052807f18ea5a140eb6992ba8808cae93fbd0d09366a76cfe73f1b57e6dbc252a4fef0681526020017f0b3823ffcdcf9232d2108061be21be4735183561e8223f0a43be665e99ff1ffd8152508152508160200181905250604051806040016040528060405180604001604052807f18d9477ebbd39d14a0a6508ef233f80375836e2a51d58c756225514d4d74f3d681526020017f116335003bd35adb08a9ec2895b3dcaee5eb2c8d51a3adbde5bef33e19e9c42b815250815260200160405180604001604052807f0b1c2cdc4f6ddefe2c28799e3614b069c9008170eacbb26946032ab35f68d60981526020017f0f599ada312a5826f3cce89a4e996317ff209c2744e0d4e37f049a36ebfca2a68152508152508160400181905250604051806040016040528060405180604001604052807f280e0d66cfea9ab3d130ef6c7b2e52d596e57bb6ac8f69b7ff49bbcdd7ef0df981526020017f034f0bd73a9d774e5c271ceec6e42ea7c1dbe113568bdd6cd21d7a7cea0b3704815250815260200160405180604001604052807f12b824df068d35c19b2d3a40e510e7d4f7f447fb77fea4e531f84b243a34f91a81526020017f2d7f8a84dcc1de5eebca5cc3a7bd7ee3fae7091b57e3979c4381b6cdab4c74b4815250815250816060018190525060036040519080825280602002602001820160405280156125b157816020015b61259e6130df565b8152602001906001900390816125965790505b50816080018190525060405180604001604052807f2363aa942b7904eede22e46cf05b5c6d2b98fd65eed899496e2ce3185abcdf1881526020017f2290f6d9f00377df996ab25406dfad62e893811227d8d6d4e13199c3d6f8ae99815250816080015160008151811061262057fe5b602002602001018190525060405180604001604052807f0484cf95b5c33f20f70b17bfb58df3437885ad08eba364bb519e227980f145d881526020017f3030d1bdf5beb65669a538808f10e44670575986b99a6512e9f1a93dea90f7a1815250816080015160018151811061269157fe5b602002602001018190525060405180604001604052807ef36198513b8139e126a7ec50e5c0eae987d72396e1e5667d754276c105bc6781526020017f0403afbc865c36d609451b3ed719b6c85c5559e67568b3f3d52fc8da3abf1246815250816080015160028151811061270157fe5b602002602001018190525090565b612717613099565b61271f6130f9565b83600001518160006003811061273157fe5b60200201818152505083602001518160016003811061274c57fe5b602002018181525050828160026003811061276357fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461278e57612790565bfe5b508061279b57600080fd5b505092915050565b6127ab613099565b6127b361311b565b8360000151816000600481106127c557fe5b6020020181815250508360200151816001600481106127e057fe5b6020020181815250508260000151816002600481106127fb57fe5b60200201818152505082602001518160036004811061281657fe5b602002018181525050600060608360c084600060066107d05a03f19050806000811461284157612843565bfe5b508061284e57600080fd5b505092915050565b61285e613099565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561289b575060008360200151145b156128bf5760405180604001604052806000815260200160008152509150506128eb565b604051806040016040528084600001518152602001828560200151816128e157fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561292f57816020015b61291c6130df565b8152602001906001900390816129145790505b5090506060600460405190808252806020026020018201604052801561296f57816020015b61295c61313d565b8152602001906001900390816129545790505b5090508a8260008151811061298057fe5b6020026020010181905250888260018151811061299957fe5b602002602001018190525086826002815181106129b257fe5b602002602001018190525084826003815181106129cb57fe5b602002602001018190525089816000815181106129e457fe5b602002602001018190525087816001815181106129fd57fe5b60200260200101819052508581600281518110612a1657fe5b60200260200101819052508381600381518110612a2f57fe5b6020026020010181905250612a448282612cb5565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612a9657506000801b8214155b92505050919050565b612ab760018260000154612ad890919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b1a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612f0a565b905092915050565b60001515612b2f826116aa565b151514612b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b6890613e4d565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612c0a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612ac2565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60008151835114612cc557600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612d045781602001602082028038833980820191505090505b50905060008090505b83811015612eaa57868181518110612d2157fe5b602002602001015160000151826000600684020181518110612d3f57fe5b602002602001018181525050868181518110612d5757fe5b602002602001015160200151826001600684020181518110612d7557fe5b602002602001018181525050858181518110612d8d57fe5b602002602001015160000151600060028110612da557fe5b6020020151826002600684020181518110612dbc57fe5b602002602001018181525050858181518110612dd457fe5b602002602001015160000151600160028110612dec57fe5b6020020151826003600684020181518110612e0357fe5b602002602001018181525050858181518110612e1b57fe5b602002602001015160200151600060028110612e3357fe5b6020020151826004600684020181518110612e4a57fe5b602002602001018181525050858181518110612e6257fe5b602002602001015160200151600160028110612e7a57fe5b6020020151826005600684020181518110612e9157fe5b6020026020010181815250508080600101915050612d0d565b50612eb3613163565b60006020826020860260208601600060086107d05a03f190508060008114612eda57612edc565bfe5b5080612ee757600080fd5b600082600060018110612ef657fe5b602002015114159550505050505092915050565b6000838311158290612f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f499190613deb565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612fa657805160ff1916838001178555612fd4565b82800160010185558215612fd4579182015b82811115612fd3578251825591602001919060010190612fb8565b5b509050612fe19190613185565b5090565b60405180606001604052806000801916815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60405180606001604052806130326130df565b815260200161303f61313d565b815260200161304c6130df565b81525090565b6040518060a001604052806130656130df565b815260200161307261313d565b815260200161307f61313d565b815260200161308c61313d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156130da578183600052602060002091820191016130d99190613185565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b60405180604001604052806131506131aa565b815260200161315d6131aa565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6131a791905b808211156131a357600081600090555060010161318b565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b6000813590506131db816141d4565b92915050565b600082601f8301126131f257600080fd5b600261320561320082613f15565b613ee8565b9150818385604084028201111561321b57600080fd5b60005b8381101561324b57816132318882613255565b84526020840193506040830192505060018101905061321e565b5050505092915050565b600082601f83011261326657600080fd5b600261327961327482613f37565b613ee8565b9150818385602084028201111561328f57600080fd5b60005b838110156132bf57816132a58882613439565b845260208401935060208301925050600181019050613292565b5050505092915050565b600082601f8301126132da57600080fd5b60026132ed6132e882613f59565b613ee8565b9150818385602084028201111561330357600080fd5b60005b8381101561333357816133198882613439565b845260208401935060208301925050600181019050613306565b5050505092915050565b60008135905061334c816141eb565b92915050565b60008135905061336181614202565b92915050565b60008135905061337681614219565b92915050565b60008151905061338b81614219565b92915050565b600082601f8301126133a257600080fd5b81356133b56133b082613f7b565b613ee8565b915080825260208301602083018583830111156133d157600080fd5b6133dc838284614146565b50505092915050565b600082601f8301126133f657600080fd5b813561340961340482613fa7565b613ee8565b9150808252602083016020830185838301111561342557600080fd5b613430838284614146565b50505092915050565b60008135905061344881614230565b92915050565b60006020828403121561346057600080fd5b600061346e848285016131cc565b91505092915050565b6000806040838503121561348a57600080fd5b6000613498858286016131cc565b92505060206134a9858286016131cc565b9150509250929050565b6000806000606084860312156134c857600080fd5b60006134d6868287016131cc565b93505060206134e7868287016131cc565b92505060406134f886828701613439565b9150509250925092565b6000806000806080858703121561351857600080fd5b6000613526878288016131cc565b9450506020613537878288016131cc565b935050604061354887828801613439565b925050606085013567ffffffffffffffff81111561356557600080fd5b61357187828801613391565b91505092959194509250565b6000806040838503121561359057600080fd5b600061359e858286016131cc565b92505060206135af8582860161333d565b9150509250929050565b600080604083850312156135cc57600080fd5b60006135da858286016131cc565b92505060206135eb85828601613439565b9150509250929050565b600080600080600080610180878903121561360f57600080fd5b600061361d89828a016131cc565b965050602061362e89828a01613439565b955050604061363f89828a016132c9565b945050608061365089828a016131e1565b93505061010061366289828a016132c9565b92505061014061367489828a016132c9565b9150509295509295509295565b600080600080610140858703121561369857600080fd5b60006136a6878288016132c9565b94505060406136b7878288016131e1565b93505060c06136c8878288016132c9565b9250506101006136da878288016132c9565b91505092959194509250565b6000602082840312156136f857600080fd5b60006137068482850161333d565b91505092915050565b6000806040838503121561372257600080fd5b600061373085828601613352565b925050602083013567ffffffffffffffff81111561374d57600080fd5b613759858286016133e5565b9150509250929050565b60008060006060848603121561377857600080fd5b600061378686828701613352565b935050602084013567ffffffffffffffff8111156137a357600080fd5b6137af868287016133e5565b925050604084013567ffffffffffffffff8111156137cc57600080fd5b6137d886828701613391565b9150509250925092565b6000602082840312156137f457600080fd5b600061380284828501613367565b91505092915050565b60006020828403121561381d57600080fd5b600061382b8482850161337c565b91505092915050565b60006020828403121561384657600080fd5b600061385484828501613439565b91505092915050565b60006138698383613970565b60408301905092915050565b60006138818383613c58565b60208301905092915050565b61389681614110565b82525050565b6138a581614092565b82525050565b6138bc6138b782614092565b614188565b82525050565b6138cb81613ff1565b6138d5818461404f565b92506138e082613fd3565b8060005b838110156139115781516138f8878261385d565b965061390383614028565b9250506001810190506138e4565b505050505050565b61392281614007565b61392c8184614065565b925061393782613fe7565b8060005b8381101561396857815161394f8782613875565b965061395a83614042565b92505060018101905061393b565b505050505050565b61397981613ffc565b613983818461405a565b925061398e82613fdd565b8060005b838110156139bf5781516139a68782613875565b96506139b183614035565b925050600181019050613992565b505050505050565b6139d0816140a4565b82525050565b6139df816140b0565b82525050565b60006139f082614012565b6139fa8185614070565b9350613a0a818560208601614155565b613a13816141b6565b840191505092915050565b6000613a298261401d565b613a338185614081565b9350613a43818560208601614155565b613a4c816141b6565b840191505092915050565b6000613a64601683614081565b91507f5468652070726f6f66206973206e6f742076616c6964000000000000000000006000830152602082019050919050565b6000613aa4602183614081565b91507f54686520736f6c7574696f6e20686173206265656e2075736564206265666f7260008301527f65000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613b0a601483614081565b91507f546f6b656e20616c7265616479206578697374730000000000000000000000006000830152602082019050919050565b6000613b4a602083614081565b91507f4e6577206f776e6572206d7573742062652061207265616c20616464726573736000830152602082019050919050565b6000613b8a602283614081565b91507f5472616e73616374696f6e207375636365737366756c6c79207665726966696560008301527f642e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613bf0602483614081565b91507f546f6b656e20697320616c7265616479206f776e6564206279206f776e65722060008301527f2d20746f000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b613c5281614106565b82525050565b613c6181614106565b82525050565b613c78613c7382614106565b6141ac565b82525050565b6000613c8a8289613c67565b602082019150613c9a82886138ab565b601482019150613caa8287613919565b604082019150613cba82866138c2565b608082019150613cca8285613919565b604082019150613cda8284613919565b604082019150819050979650505050505050565b6000602082019050613d03600083018461389c565b92915050565b6000602082019050613d1e600083018461388d565b92915050565b6000608082019050613d39600083018761388d565b613d46602083018661389c565b613d536040830185613c49565b8181036060830152613d6581846139e5565b905095945050505050565b6000604082019050613d85600083018561389c565b613d92602083018461389c565b9392505050565b6000602082019050613dae60008301846139c7565b92915050565b6000606082019050613dc960008301866139d6565b613dd6602083018561389c565b613de36040830184613c49565b949350505050565b60006020820190508181036000830152613e058184613a1e565b905092915050565b60006020820190508181036000830152613e2681613a57565b9050919050565b60006020820190508181036000830152613e4681613a97565b9050919050565b60006020820190508181036000830152613e6681613afd565b9050919050565b60006020820190508181036000830152613e8681613b3d565b9050919050565b60006020820190508181036000830152613ea681613b7d565b9050919050565b60006020820190508181036000830152613ec681613be3565b9050919050565b6000602082019050613ee26000830184613c49565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613f0b57600080fd5b8060405250919050565b600067ffffffffffffffff821115613f2c57600080fd5b602082029050919050565b600067ffffffffffffffff821115613f4e57600080fd5b602082029050919050565b600067ffffffffffffffff821115613f7057600080fd5b602082029050919050565b600067ffffffffffffffff821115613f9257600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613fbe57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061409d826140e6565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061411b82614122565b9050919050565b600061412d82614134565b9050919050565b600061413f826140e6565b9050919050565b82818337600083830152505050565b60005b83811015614173578082015181840152602081019050614158565b83811115614182576000848401525b50505050565b60006141938261419a565b9050919050565b60006141a5826141c7565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b6141dd81614092565b81146141e857600080fd5b50565b6141f4816140a4565b81146141ff57600080fd5b50565b61420b816140b0565b811461421657600080fd5b50565b614222816140ba565b811461422d57600080fd5b50565b61423981614106565b811461424457600080fd5b5056fea365627a7a72315820a53d757a46575096fc7fd5cc4627b8816ff1e4425b1a2d3e1f29e04bc3f9686d6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "323:1789:6:-;;;20290:284:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:10;722:6;;:19;;;;;;;;;;;;;;;;;;2622:5;2612:7;;:15;;;;;;;;;;;;;;;;;;3550:40;3147:10;3569:20;;3550:18;;;:40;;:::i;:::-;5696;5570:10;5715:20;;5696:18;;;:40;;:::i;:::-;13027:51;12633:10;13046:31;;13027:18;;;:51;;:::i;:::-;20439:4;20431:5;:12;;;;;;;;;;;;:::i;:::-;;20463:6;20453:7;:16;;;;;;;;;;;;:::i;:::-;;20495:12;20479:13;:28;;;;;;;;;;;;:::i;:::-;;20518:49;20101:10;20537:29;;20518:18;;;:49;;:::i;:::-;20290:284;;;323:1789:6;;3900:158:4;3990:10;3975:25;;:11;:25;;;;;3967:34;;;;;;4047:4;4011:20;:33;4032:11;4011:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3900:158;:::o;323:1789:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "323:1789:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;323:1789:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3688:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6845:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6275:564;;;;;;;;;;;;;;;;:::i;:::-;;20753:90;;;:::i;:::-;;;;;;;;;;;;;;;;2286:209;;;;;;;;;;;;;;;;:::i;:::-;;20661:86;;;:::i;:::-;;;;;;;;;;;;;;;;13792:94;;;:::i;:::-;;;;;;;;;;;;;;;;7989:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;21585:163:4;;;;;;;;;;;;;;;;:::i;:::-;;13458:182;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;963:682:6;;;;;;;;;;;;;;;;:::i;:::-;;1867:243;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8175:132:4;;;;;;;;;;;;;;;;:::i;:::-;;20849:102;;;:::i;:::-;;;;;;;;;;;;;;;;14223:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;23963:732:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6040:162:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5749:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7304:213;;;;;;;;;;;;;;;;:::i;:::-;;8313:211;;;;;;;;;;;;;;;;:::i;:::-;;20957:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;498:85;;;:::i;:::-;;;;;;;;;;;;;;;;7838:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;986:406;;;;;;;;;;;;;;;;:::i;:::-;;3688:133;3758:4;3781:20;:33;3802:11;3781:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3774:40;;3688:133;;;:::o;6845:167::-;6904:7;6981:15;:24;6997:7;6981:24;;;;;;;;;;;;;;;;;;;;;6974:31;;6845:167;;;:::o;6275:564::-;6438:16;6446:7;6438;:16::i;:::-;6432:22;;:2;:22;;;;6424:71;;;;;;;;;;;;;;;;;;;;;;6617:39;6636:10;6648:7;6617:18;:39::i;:::-;6609:48;;;;;;6746:2;6719:15;:24;6735:7;6719:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6824:7;6820:2;6799:33;;6808:10;6799:33;;;;;;;;;;;;6275:564;;:::o;20753:90::-;20797:13;20829:7;20822:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20753:90;:::o;2286:209::-;905:6;;;;;;;;;;;891:20;;:10;:20;;;883:29;;;;;;2355:6;2345:7;;:16;;;;;;;;;;;;;;;;;;2375:7;;;;;;;;;;;2371:118;;;2403:18;2410:10;2403:18;;;;;;;;;;;;;;;2371:118;;;2458:20;2467:10;2458:20;;;;;;;;;;;;;;;2371:118;2286:209;:::o;20661:86::-;20703:13;20735:5;20728:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20661:86;:::o;13792:94::-;13836:7;13862:10;:17;;;;13855:24;;13792:94;:::o;7989:180::-;8079:39;8098:10;8110:7;8079:18;:39::i;:::-;8071:48;;;;;;8130:32;8144:4;8150:2;8154:7;8130:13;:32::i;:::-;7989:180;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;21585:163:4:-;21649:16;21657:7;21649;:16::i;:::-;21641:25;;;;;;21698:43;21708:13;21698:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21723:17;21732:7;21723:8;:17::i;:::-;21698:9;:43::i;:::-;21676:10;:19;21687:7;21676:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21585:163;:::o;13458:182::-;13538:7;13573:16;13583:5;13573:9;:16::i;:::-;13565:5;:24;13557:33;;;;;;13607:12;:19;13620:5;13607:19;;;;;;;;;;;;;;;13627:5;13607:26;;;;;;;;;;;;;;;;13600:33;;13458:182;;;;:::o;14929:166:5:-;;;;:::o;963:682:6:-;1177:11;1231:7;1240:4;1245:1;1247;1249;1252:5;1214:44;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1214:44:6;;;1191:77;;;;;;1177:91;;1287:18;:23;1306:3;1287:23;;;;;;;;;;;;;;;;;;;;;1286:24;1278:70;;;;;;;;;;;;;;;;;;;;;;1358:12;1373:21;1382:1;1384;1386;1388:5;1373:8;:21::i;:::-;1358:36;;1412:7;1404:42;;;;;;;;;;;;;;;;;;;;;;1456:24;;:::i;:::-;1483:28;;;;;;;;1492:3;1483:28;;;;1497:7;1483:28;;;;1506:4;1483:28;;;;;1456:55;;1542:8;1521:9;:18;1531:7;1521:18;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:4;1560:18;:23;1579:3;1560:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1605:33;1619:3;1624:4;1630:7;1605:33;;;;;;;;;;;;;;;;;963:682;;;;;;;;;:::o;1867:243::-;1928:4;2000:1;1965:37;;:9;:18;1975:7;1965:18;;;;;;;;;;;:23;;;;;;;;;;;;:37;;;;1944:117;;;;;;;;;;;;;;;;;;;;;;2078:25;2089:4;2095:7;2078:10;:25::i;:::-;2071:32;;1867:243;;;;:::o;8175:132:4:-;8261:39;8278:4;8284:2;8288:7;8261:39;;;;;;;;;;;;:16;:39::i;:::-;8175:132;;;:::o;20849:102::-;20899:13;20931;20924:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20849:102;:::o;14223:148::-;14281:7;14316:13;:11;:13::i;:::-;14308:5;:21;14300:30;;;;;;14347:10;14358:5;14347:17;;;;;;;;;;;;;;;;14340:24;;14223:148;;;:::o;23963:732:7:-;24134:6;24152:18;;:::i;:::-;24190:27;;;;;;;;24206:1;24208;24206:4;;;;;;;;;;;24190:27;;;;24212:1;24214;24212:4;;;;;;;;;;;24190:27;;;24180:5;:7;;:37;;;;24237:55;;;;;;;;;;;;;;;;24254:1;24256;24254:4;;;;;;;;;;;24259:1;24254:7;;;;;;;;;;;24237:55;;;;24263:1;24265;24263:4;;;;;;;;;;;24268:1;24263:7;;;;;;;;;;;24237:55;;;;;;;;;;;;;;;24274:1;24276;24274:4;;;;;;;;;;;24279:1;24274:7;;;;;;;;;;;24237:55;;;;24283:1;24285;24283:4;;;;;;;;;;;24288:1;24283:7;;;;;;;;;;;24237:55;;;;;;24227:5;:7;;:65;;;;24312:27;;;;;;;;24328:1;24330;24328:4;;;;;;;;;;;24312:27;;;;24334:1;24336;24334:4;;;;;;;;;;;24312:27;;;24302:5;:7;;:37;;;;24349:25;24388:12;24377:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24377:24:7;;;;24349:52;;24415:6;24424:1;24415:10;;24411:88;24431:12;24427:1;:16;24411:88;;;24480:5;24486:1;24480:8;;;;;;;;;;;24463:11;24475:1;24463:14;;;;;;;;;;;;;:25;;;;;24445:3;;;;;;;24411:88;;;;24542:1;24512:26;24519:11;24532:5;24512:6;:26::i;:::-;:31;24508:181;;;24564:46;;;;;;;;;;;;;;;24631:4;24624:11;;;;;;24508:181;24673:5;24666:12;;;;23963:732;;;;;;;:::o;6040:162:4:-;6095:7;6175:11;:20;6187:7;6175:20;;;;;;;;;;;;;;;;;;;;;6168:27;;6040:162;;;:::o;5749:285::-;5804:7;5993:34;:17;:24;6011:5;5993:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5986:41;;5749:285;;;:::o;7304:213::-;7389:10;7383:16;;:2;:16;;;;7375:25;;;;;;7447:8;7410:18;:30;7429:10;7410:30;;;;;;;;;;;;;;;:34;7441:2;7410:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7497:2;7470:40;;7485:10;7470:40;;;7501:8;7470:40;;;;;;;;;;;;;;;7304:213;;:::o;8313:211::-;8419:31;8432:4;8438:2;8442:7;8419:12;:31::i;:::-;8468:48;8491:4;8497:2;8501:7;8510:5;8468:22;:48::i;:::-;8460:57;;;;;;8313:211;;;;:::o;20957:151::-;21015:13;21048:16;21056:7;21048;:16::i;:::-;21040:25;;;;;;21082:10;:19;21093:7;21082:19;;;;;;;;;;;21075:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20957:151;;;:::o;498:85::-;544:7;570:6;;;;;;;;;;;563:13;;498:85;:::o;7838:145::-;7918:4;7941:18;:25;7960:5;7941:25;;;;;;;;;;;;;;;:35;7967:8;7941:35;;;;;;;;;;;;;;;;;;;;;;;;;7934:42;;7838:145;;;;:::o;986:406::-;905:6;;;;;;;;;;;891:20;;:10;:20;;;883:29;;;;;;1224:1;1204:22;;:8;:22;;;;1196:67;;;;;;;;;;;;;;;;;;;;;;1273:19;1295:6;;;;;;;;;;;1273:28;;1320:8;1311:6;;:17;;;;;;;;;;;;;;;;;;1343:42;1363:11;1376:8;1343:42;;;;;;;;;;;;;;;;922:1;986:406;:::o;9230:246::-;9315:4;9331:13;9347:16;9355:7;9347;:16::i;:::-;9331:32;;9392:5;9381:16;;:7;:16;;;:51;;;;9425:7;9401:31;;:20;9413:7;9401:11;:20::i;:::-;:31;;;9381:51;:87;;;;9436:32;9453:5;9460:7;9436:16;:32::i;:::-;9381:87;9373:96;;;9230:246;;;;:::o;14746:239::-;14831:38;14851:4;14857:2;14861:7;14831:19;:38::i;:::-;14880:47;14913:4;14919:7;14880:32;:47::i;:::-;14938:40;14966:2;14970:7;14938:27;:40::i;:::-;14746:239;;;:::o;8718:152::-;8775:4;8791:13;8807:11;:20;8819:7;8807:20;;;;;;;;;;;;;;;;;;;;;8791:36;;8861:1;8844:19;;:5;:19;;;;8837:26;;;8718:152;;;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;22518:162:4:-;22587:4;905:6;;;;;;;;;;;891:20;;:10;:20;;;883:29;;;;;;22603:18;22609:2;22613:7;22603:5;:18::i;:::-;22631:21;22644:7;22631:12;:21::i;:::-;22669:4;22662:11;;22518:162;;;;:::o;23019:909:7:-;23094:4;23110:26;23139:77;23110:106;;23226:22;;:::i;:::-;23251:14;:12;:14::i;:::-;23226:39;;23303:2;:12;;;:19;23298:1;23283:5;:12;:16;:39;23275:48;;;;;;23380:27;;:::i;:::-;23410:21;;;;;;;;23426:1;23410:21;;;;23429:1;23410:21;;;23380:51;;23446:6;23455:1;23446:10;;23441:197;23462:5;:12;23458:1;:16;23441:197;;;23514:18;23503:5;23509:1;23503:8;;;;;;;;;;;;;;:29;23495:38;;;;;;23554:73;23571:4;23577:49;23596:2;:12;;;23613:1;23609;:5;23596:19;;;;;;;;;;;;;;23617:5;23623:1;23617:8;;;;;;;;;;;;;;23577:18;:49::i;:::-;23554:16;:73::i;:::-;23547:80;;23476:3;;;;;;;23441:197;;;;23654:39;23671:4;23677:2;:12;;;23690:1;23677:15;;;;;;;;;;;;;;23654:16;:39::i;:::-;23647:46;;23707:186;23742:5;:7;;;23751:5;:7;;;23773:20;23788:4;23773:14;:20::i;:::-;23795:2;:8;;;23818:23;23833:5;:7;;;23818:14;:23::i;:::-;23843:2;:8;;;23866:20;23881:2;:4;;;23866:14;:20::i;:::-;23888:2;:4;;;23707:20;:186::i;:::-;23703:200;;23902:1;23895:8;;;;;;;23703:200;23920:1;23913:8;;;;;23019:909;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11478:347:4:-;11599:4;11624:15;:2;:13;;;:15::i;:::-;11619:58;;11662:4;11655:11;;;;11619:58;11687:13;11719:2;11703:36;;;11740:10;11752:4;11758:7;11767:5;11703:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11703:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11703:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11703:70:4;;;;;;;;;11687:86;;4703:10;11801:16;;11791:26;;;:6;:26;;;;11783:35;;;11478:347;;;;;;;:::o;10285:665::-;10449:33;10468:4;10474:7;10449:18;:33::i;:::-;10441:42;;;;;;10584:2;10569:17;;10577:2;10569:17;;;10561:26;;;;;;10664:1;10629:15;:24;10645:7;10629:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10774:2;10751:11;:20;10763:7;10751:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10787:35;:17;:23;10805:4;10787:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10832:33;:17;:21;10850:2;10832:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10935:7;10931:2;10916:27;;10925:4;10916:27;;;;;;;;;;;;10285:665;;;:::o;17212:1128::-;17474:22;17499:32;17529:1;17499:12;:18;17512:4;17499:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17474:57;;17541:18;17562:17;:26;17580:7;17562:26;;;;;;;;;;;;17541:47;;17706:14;17692:10;:28;17688:323;;17736:19;17758:12;:18;17771:4;17758:18;;;;;;;;;;;;;;;17777:14;17758:34;;;;;;;;;;;;;;;;17736:56;;17840:11;17807:12;:18;17820:4;17807:18;;;;;;;;;;;;;;;17826:10;17807:30;;;;;;;;;;;;;;;:44;;;;17956:10;17923:17;:30;17941:11;17923:30;;;;;;;;;;;:43;;;;17688:323;;18097:12;:18;18110:4;18097:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17212:1128;;;;:::o;16058:183::-;16171:12;:16;16184:2;16171:16;;;;;;;;;;;;;;;:23;;;;16142:17;:26;16160:7;16142:26;;;;;;;;;;;:52;;;;16204:12;:16;16217:2;16204:16;;;;;;;;;;;;;;;16226:7;16204:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16204:30:4;;;;;;;;;;;;;;;;;;;;;;16058:183;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;15240:196:4:-;15303:24;15315:2;15319:7;15303:11;:24::i;:::-;15338:40;15366:2;15370:7;15338:27;:40::i;:::-;15389;15421:7;15389:31;:40::i;:::-;15240:196;;:::o;21070:1944:7:-;21117:22;;:::i;:::-;21158:169;;;;;;;;21182:66;21158:169;;;;21259:66;21158:169;;;21151:2;:4;;:176;;;;21344:327;;;;;;;;;;;;;;;;21369:66;21344:327;;;;21446:66;21344:327;;;;;;;;;;;;;;;21525:66;21344:327;;;;21602:66;21344:327;;;;;;21337:2;:4;;:334;;;;21692:327;;;;;;;;;;;;;;;;21717:66;21692:327;;;;21794:66;21692:327;;;;;;;;;;;;;;;21873:66;21692:327;;;;21950:66;21692:327;;;;;;21681:2;:8;;:338;;;;22040:327;;;;;;;;;;;;;;;;22065:66;22040:327;;;;22142:66;22040:327;;;;;;;;;;;;;;;22221:66;22040:327;;;;22298:66;22040:327;;;;;;22029:2;:8;;:338;;;;22414:1;22392:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22377:2;:12;;:39;;;;22444:169;;;;;;;;22468:66;22444:169;;;;22545:66;22444:169;;;22426:2;:12;;;22439:1;22426:15;;;;;;;;;;;;;:187;;;;22641:169;;;;;;;;22665:66;22641:169;;;;22742:66;22641:169;;;22623:2;:12;;;22636:1;22623:15;;;;;;;;;;;;;:187;;;;22838:169;;;;;;;;22862:66;22838:169;;;;22939:66;22838:169;;;22820:2;:12;;;22833:1;22820:15;;;;;;;;;;;;;:187;;;;21070:1944;:::o;17613:444::-;17677:16;;:::i;:::-;17705:20;;:::i;:::-;17746:1;:3;;;17735:5;17741:1;17735:8;;;;;;;;;;:14;;;;;17770:1;:3;;;17759:5;17765:1;17759:8;;;;;;;;;;:14;;;;;17794:1;17783:5;17789:1;17783:8;;;;;;;;;;:12;;;;;17805;17904:4;17901:1;17895:4;17888:5;17885:1;17882;17875:4;17870:3;17866:14;17861:48;17850:59;;17986:7;17999:1;17994:20;;;;17979:35;;17994:20;18003:9;17979:35;;18042:7;18033:17;;;;;;17613:444;;;;;;:::o;16701:483::-;16775:16;;:::i;:::-;16803:20;;:::i;:::-;16844:2;:4;;;16833:5;16839:1;16833:8;;;;;;;;;;:15;;;;;16869:2;:4;;;16858:5;16864:1;16858:8;;;;;;;;;;:15;;;;;16894:2;:4;;;16883:5;16889:1;16883:8;;;;;;;;;;:15;;;;;16919:2;:4;;;16908:5;16914:1;16908:8;;;;;;;;;;:15;;;;;16933:12;17032:4;17029:1;17023:4;17016:5;17013:1;17010;17003:4;16998:3;16994:14;16989:48;16978:59;;17114:7;17127:1;17122:20;;;;17107:35;;17122:20;17131:9;17107:35;;17169:7;17161:16;;;;;;16701:483;;;;;;:::o;16312:340::-;16369:14;;:::i;:::-;16447:6;16456:77;16447:86;;16554:1;16547;:3;;;:8;:20;;;;;16566:1;16559;:3;;;:8;16547:20;16543:58;;;16588:13;;;;;;;;16596:1;16588:13;;;;16599:1;16588:13;;;16581:20;;;;;16543:58;16618:27;;;;;;;;16626:1;:3;;;16618:27;;;;16642:1;16636;:3;;;:7;;;;;;16631:1;:13;16618:27;;;16611:34;;;16312:340;;;;:::o;20179:547::-;20425:4;20441:19;20477:1;20463:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20441:38;;20489:19;20525:1;20511:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20489:38;;20545:2;20537;20540:1;20537:5;;;;;;;;;;;;;:10;;;;20565:2;20557;20560:1;20557:5;;;;;;;;;;;;;:10;;;;20585:2;20577;20580:1;20577:5;;;;;;;;;;;;;:10;;;;20605:2;20597;20600:1;20597:5;;;;;;;;;;;;;:10;;;;20625:2;20617;20620:1;20617:5;;;;;;;;;;;;;:10;;;;20645:2;20637;20640:1;20637:5;;;;;;;;;;;;;:10;;;;20665:2;20657;20660:1;20657:5;;;;;;;;;;;;;:10;;;;20685:2;20677;20680:1;20677:5;;;;;;;;;;;;;:10;;;;20704:15;20712:2;20716;20704:7;:15::i;:::-;20697:22;;;;20179:547;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;9633:453:4:-;9808:5;9788:25;;:16;9796:7;9788;:16::i;:::-;:25;;;9780:58;;;;;;;;;;;;;;;;;;;;;;9949:2;9926:11;:20;9938:7;9926:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9961:33;:17;:21;9979:2;9961:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10070:7;10066:2;10045:33;;10054:10;10045:33;;;;;;;;;;;;9633:453;;:::o;16436:161::-;16539:10;:17;;;;16512:15;:24;16528:7;16512:24;;;;;;;;;;;:44;;;;16566:10;16582:7;16566:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16566:24:4;;;;;;;;;;;;;;;;;;;;;;16436:161;:::o;18268:913:7:-;18345:4;18382:2;:9;18369:2;:9;:22;18361:31;;;;;;18402:13;18418:2;:9;18402:25;;18437:14;18465:1;18454:8;:12;18437:29;;18476:19;18509:9;18498:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18498:21:7;;;;18476:43;;18534:6;18543:1;18534:10;;18529:307;18550:8;18546:1;:12;18529:307;;;18606:2;18609:1;18606:5;;;;;;;;;;;;;;:7;;;18587:5;18601:1;18597;18593;:5;:9;18587:16;;;;;;;;;;;;;:26;;;;;18646:2;18649:1;18646:5;;;;;;;;;;;;;;:7;;;18627:5;18641:1;18637;18633;:5;:9;18627:16;;;;;;;;;;;;;:26;;;;;18686:2;18689:1;18686:5;;;;;;;;;;;;;;:7;;;18694:1;18686:10;;;;;;;;;;;18667:5;18681:1;18677;18673;:5;:9;18667:16;;;;;;;;;;;;;:29;;;;;18729:2;18732:1;18729:5;;;;;;;;;;;;;;:7;;;18737:1;18729:10;;;;;;;;;;;18710:5;18724:1;18720;18716;:5;:9;18710:16;;;;;;;;;;;;;:29;;;;;18772:2;18775:1;18772:5;;;;;;;;;;;;;;:7;;;18780:1;18772:10;;;;;;;;;;;18753:5;18767:1;18763;18759;:5;:9;18753:16;;;;;;;;;;;;;:29;;;;;18815:2;18818:1;18815:5;;;;;;;;;;;;;;:7;;;18823:1;18815:10;;;;;;;;;;;18796:5;18810:1;18806;18802;:5;:9;18796:16;;;;;;;;;;;;;:29;;;;;18560:3;;;;;;;18529:307;;;;18845:18;;:::i;:::-;18873:12;19001:4;18996:3;18989:4;18978:9;18974:20;18967:4;18960:5;18956:16;18953:1;18950;18943:4;18938:3;18934:14;18929:77;18918:88;;19083:7;19096:1;19091:20;;;;19076:35;;19091:20;19100:9;19076:35;;19138:7;19130:16;;;;;;19173:1;19163:3;19167:1;19163:6;;;;;;;;;;;:11;;19156:18;;;;;;;18268:913;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;323:1789:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;323:1789:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;323:1789:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;323:1789:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;323:1789:6;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;164:673;;298:3;291:4;283:6;279:17;275:27;265:2;;316:1;313;306:12;265:2;340:4;359:97;374:81;448:6;374:81;;;359:97;;;350:106;;473:5;532:6;579:3;571:4;563:6;559:17;554:3;550:27;547:36;544:2;;;596:1;593;586:12;544:2;621:1;606:225;631:6;628:1;625:13;606:225;;;689:3;711:56;763:3;751:10;711:56;;;706:3;699:69;791:4;786:3;782:14;775:21;;819:4;814:3;810:14;803:21;;663:168;653:1;650;646:9;641:14;;606:225;;;610:14;258:579;;;;;;;;864:608;;975:3;968:4;960:6;956:17;952:27;942:2;;993:1;990;983:12;942:2;1017:4;1036:74;1051:58;1102:6;1051:58;;;1036:74;;;1027:83;;1127:5;1186:6;1233:3;1225:4;1217:6;1213:17;1208:3;1204:27;1201:36;1198:2;;;1250:1;1247;1240:12;1198:2;1275:1;1260:206;1285:6;1282:1;1279:13;1260:206;;;1343:3;1365:37;1398:3;1386:10;1365:37;;;1360:3;1353:50;1426:4;1421:3;1417:14;1410:21;;1454:4;1449:3;1445:14;1438:21;;1317:149;1307:1;1304;1300:9;1295:14;;1260:206;;;1264:14;935:537;;;;;;;;1499:616;;1614:3;1607:4;1599:6;1595:17;1591:27;1581:2;;1632:1;1629;1622:12;1581:2;1656:4;1675:78;1690:62;1745:6;1690:62;;;1675:78;;;1666:87;;1770:5;1829:6;1876:3;1868:4;1860:6;1856:17;1851:3;1847:27;1844:36;1841:2;;;1893:1;1890;1883:12;1841:2;1918:1;1903:206;1928:6;1925:1;1922:13;1903:206;;;1986:3;2008:37;2041:3;2029:10;2008:37;;;2003:3;1996:50;2069:4;2064:3;2060:14;2053:21;;2097:4;2092:3;2088:14;2081:21;;1960:149;1950:1;1947;1943:9;1938:14;;1903:206;;;1907:14;1574:541;;;;;;;;2123:124;;2200:6;2187:20;2178:29;;2212:30;2236:5;2212:30;;;2172:75;;;;;2254:130;;2334:6;2321:20;2312:29;;2346:33;2373:5;2346:33;;;2306:78;;;;;2391:128;;2470:6;2457:20;2448:29;;2482:32;2508:5;2482:32;;;2442:77;;;;;2526:132;;2609:6;2603:13;2594:22;;2621:32;2647:5;2621:32;;;2588:70;;;;;2666:440;;2767:3;2760:4;2752:6;2748:17;2744:27;2734:2;;2785:1;2782;2775:12;2734:2;2822:6;2809:20;2844:64;2859:48;2900:6;2859:48;;;2844:64;;;2835:73;;2928:6;2921:5;2914:21;2964:4;2956:6;2952:17;2997:4;2990:5;2986:16;3032:3;3023:6;3018:3;3014:16;3011:25;3008:2;;;3049:1;3046;3039:12;3008:2;3059:41;3093:6;3088:3;3083;3059:41;;;2727:379;;;;;;;;3115:442;;3217:3;3210:4;3202:6;3198:17;3194:27;3184:2;;3235:1;3232;3225:12;3184:2;3272:6;3259:20;3294:65;3309:49;3351:6;3309:49;;;3294:65;;;3285:74;;3379:6;3372:5;3365:21;3415:4;3407:6;3403:17;3448:4;3441:5;3437:16;3483:3;3474:6;3469:3;3465:16;3462:25;3459:2;;;3500:1;3497;3490:12;3459:2;3510:41;3544:6;3539:3;3534;3510:41;;;3177:380;;;;;;;;3565:130;;3645:6;3632:20;3623:29;;3657:33;3684:5;3657:33;;;3617:78;;;;;3702:241;;3806:2;3794:9;3785:7;3781:23;3777:32;3774:2;;;3822:1;3819;3812:12;3774:2;3857:1;3874:53;3919:7;3910:6;3899:9;3895:22;3874:53;;;3864:63;;3836:97;3768:175;;;;;3950:366;;;4071:2;4059:9;4050:7;4046:23;4042:32;4039:2;;;4087:1;4084;4077:12;4039:2;4122:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;;;4129:63;;4101:97;4229:2;4247:53;4292:7;4283:6;4272:9;4268:22;4247:53;;;4237:63;;4208:98;4033:283;;;;;;4323:491;;;;4461:2;4449:9;4440:7;4436:23;4432:32;4429:2;;;4477:1;4474;4467:12;4429:2;4512:1;4529:53;4574:7;4565:6;4554:9;4550:22;4529:53;;;4519:63;;4491:97;4619:2;4637:53;4682:7;4673:6;4662:9;4658:22;4637:53;;;4627:63;;4598:98;4727:2;4745:53;4790:7;4781:6;4770:9;4766:22;4745:53;;;4735:63;;4706:98;4423:391;;;;;;4821:721;;;;;4985:3;4973:9;4964:7;4960:23;4956:33;4953:2;;;5002:1;4999;4992:12;4953:2;5037:1;5054:53;5099:7;5090:6;5079:9;5075:22;5054:53;;;5044:63;;5016:97;5144:2;5162:53;5207:7;5198:6;5187:9;5183:22;5162:53;;;5152:63;;5123:98;5252:2;5270:53;5315:7;5306:6;5295:9;5291:22;5270:53;;;5260:63;;5231:98;5388:2;5377:9;5373:18;5360:32;5412:18;5404:6;5401:30;5398:2;;;5444:1;5441;5434:12;5398:2;5464:62;5518:7;5509:6;5498:9;5494:22;5464:62;;;5454:72;;5339:193;4947:595;;;;;;;;5549:360;;;5667:2;5655:9;5646:7;5642:23;5638:32;5635:2;;;5683:1;5680;5673:12;5635:2;5718:1;5735:53;5780:7;5771:6;5760:9;5756:22;5735:53;;;5725:63;;5697:97;5825:2;5843:50;5885:7;5876:6;5865:9;5861:22;5843:50;;;5833:60;;5804:95;5629:280;;;;;;5916:366;;;6037:2;6025:9;6016:7;6012:23;6008:32;6005:2;;;6053:1;6050;6043:12;6005:2;6088:1;6105:53;6150:7;6141:6;6130:9;6126:22;6105:53;;;6095:63;;6067:97;6195:2;6213:53;6258:7;6249:6;6238:9;6234:22;6213:53;;;6203:63;;6174:98;5999:283;;;;;;6289:1092;;;;;;;6589:3;6577:9;6568:7;6564:23;6560:33;6557:2;;;6606:1;6603;6596:12;6557:2;6641:1;6658:53;6703:7;6694:6;6683:9;6679:22;6658:53;;;6648:63;;6620:97;6748:2;6766:53;6811:7;6802:6;6791:9;6787:22;6766:53;;;6756:63;;6727:98;6856:2;6874:76;6942:7;6933:6;6922:9;6918:22;6874:76;;;6864:86;;6835:121;6987:3;7006:95;7093:7;7084:6;7073:9;7069:22;7006:95;;;6996:105;;6966:141;7138:3;7157:76;7225:7;7216:6;7205:9;7201:22;7157:76;;;7147:86;;7117:122;7270:3;7289:76;7357:7;7348:6;7337:9;7333:22;7289:76;;;7279:86;;7249:122;6551:830;;;;;;;;;7388:841;;;;;7654:3;7642:9;7633:7;7629:23;7625:33;7622:2;;;7671:1;7668;7661:12;7622:2;7706:1;7723:76;7791:7;7782:6;7771:9;7767:22;7723:76;;;7713:86;;7685:120;7836:2;7854:95;7941:7;7932:6;7921:9;7917:22;7854:95;;;7844:105;;7815:140;7986:3;8005:76;8073:7;8064:6;8053:9;8049:22;8005:76;;;7995:86;;7965:122;8118:3;8137:76;8205:7;8196:6;8185:9;8181:22;8137:76;;;8127:86;;8097:122;7616:613;;;;;;;;8236:235;;8337:2;8325:9;8316:7;8312:23;8308:32;8305:2;;;8353:1;8350;8343:12;8305:2;8388:1;8405:50;8447:7;8438:6;8427:9;8423:22;8405:50;;;8395:60;;8367:94;8299:172;;;;;8478:472;;;8609:2;8597:9;8588:7;8584:23;8580:32;8577:2;;;8625:1;8622;8615:12;8577:2;8660:1;8677:53;8722:7;8713:6;8702:9;8698:22;8677:53;;;8667:63;;8639:97;8795:2;8784:9;8780:18;8767:32;8819:18;8811:6;8808:30;8805:2;;;8851:1;8848;8841:12;8805:2;8871:63;8926:7;8917:6;8906:9;8902:22;8871:63;;;8861:73;;8746:194;8571:379;;;;;;8957:701;;;;9114:2;9102:9;9093:7;9089:23;9085:32;9082:2;;;9130:1;9127;9120:12;9082:2;9165:1;9182:53;9227:7;9218:6;9207:9;9203:22;9182:53;;;9172:63;;9144:97;9300:2;9289:9;9285:18;9272:32;9324:18;9316:6;9313:30;9310:2;;;9356:1;9353;9346:12;9310:2;9376:63;9431:7;9422:6;9411:9;9407:22;9376:63;;;9366:73;;9251:194;9504:2;9493:9;9489:18;9476:32;9528:18;9520:6;9517:30;9514:2;;;9560:1;9557;9550:12;9514:2;9580:62;9634:7;9625:6;9614:9;9610:22;9580:62;;;9570:72;;9455:193;9076:582;;;;;;9665:239;;9768:2;9756:9;9747:7;9743:23;9739:32;9736:2;;;9784:1;9781;9774:12;9736:2;9819:1;9836:52;9880:7;9871:6;9860:9;9856:22;9836:52;;;9826:62;;9798:96;9730:174;;;;;9911:261;;10025:2;10013:9;10004:7;10000:23;9996:32;9993:2;;;10041:1;10038;10031:12;9993:2;10076:1;10093:63;10148:7;10139:6;10128:9;10124:22;10093:63;;;10083:73;;10055:107;9987:185;;;;;10179:241;;10283:2;10271:9;10262:7;10258:23;10254:32;10251:2;;;10299:1;10296;10289:12;10251:2;10334:1;10351:53;10396:7;10387:6;10376:9;10372:22;10351:53;;;10341:63;;10313:97;10245:175;;;;;10428:269;;10561:96;10653:3;10645:6;10561:96;;;10686:4;10681:3;10677:14;10663:28;;10554:143;;;;;10706:189;;10801:54;10851:3;10843:6;10801:54;;;10884:4;10879:3;10875:14;10861:28;;10794:101;;;;;10903:142;10994:45;11033:5;10994:45;;;10989:3;10982:58;10976:69;;;11052:113;11135:24;11153:5;11135:24;;;11130:3;11123:37;11117:48;;;11172:152;11273:45;11293:24;11311:5;11293:24;;;11273:45;;;11268:3;11261:58;11255:69;;;11370:856;11559:71;11624:5;11559:71;;;11643:121;11757:6;11752:3;11643:121;;;11636:128;;11785:73;11852:5;11785:73;;;11878:7;11906:1;11891:323;11916:6;11913:1;11910:13;11891:323;;;11983:6;11977:13;12004:109;12109:3;12094:13;12004:109;;;11997:116;;12130:77;12200:6;12130:77;;;12120:87;;11948:266;11938:1;11935;11931:9;11926:14;;11891:323;;;11895:14;11538:688;;;;;;12267:704;12418:52;12464:5;12418:52;;;12483:102;12578:6;12573:3;12483:102;;;12476:109;;12606:54;12654:5;12606:54;;;12680:7;12708:1;12693:266;12718:6;12715:1;12712:13;12693:266;;;12785:6;12779:13;12806:71;12873:3;12858:13;12806:71;;;12799:78;;12894:58;12945:6;12894:58;;;12884:68;;12750:209;12740:1;12737;12733:9;12728:14;;12693:266;;;12697:14;12397:574;;;;;;13012:648;13139:48;13181:5;13139:48;;;13200:82;13275:6;13270:3;13200:82;;;13193:89;;13303:50;13347:5;13303:50;;;13373:7;13401:1;13386:262;13411:6;13408:1;13405:13;13386:262;;;13478:6;13472:13;13499:71;13566:3;13551:13;13499:71;;;13492:78;;13587:54;13634:6;13587:54;;;13577:64;;13443:205;13433:1;13430;13426:9;13421:14;;13386:262;;;13390:14;13118:542;;;;;;13668:104;13745:21;13760:5;13745:21;;;13740:3;13733:34;13727:45;;;13779:113;13862:24;13880:5;13862:24;;;13857:3;13850:37;13844:48;;;13899:343;;14009:38;14041:5;14009:38;;;14059:70;14122:6;14117:3;14059:70;;;14052:77;;14134:52;14179:6;14174:3;14167:4;14160:5;14156:16;14134:52;;;14207:29;14229:6;14207:29;;;14202:3;14198:39;14191:46;;13989:253;;;;;;14249:347;;14361:39;14394:5;14361:39;;;14412:71;14476:6;14471:3;14412:71;;;14405:78;;14488:52;14533:6;14528:3;14521:4;14514:5;14510:16;14488:52;;;14561:29;14583:6;14561:29;;;14556:3;14552:39;14545:46;;14341:255;;;;;;14604:322;;14764:67;14828:2;14823:3;14764:67;;;14757:74;;14864:24;14860:1;14855:3;14851:11;14844:45;14917:2;14912:3;14908:12;14901:19;;14750:176;;;;14935:370;;15095:67;15159:2;15154:3;15095:67;;;15088:74;;15195:34;15191:1;15186:3;15182:11;15175:55;15264:3;15259:2;15254:3;15250:12;15243:25;15296:2;15291:3;15287:12;15280:19;;15081:224;;;;15314:320;;15474:67;15538:2;15533:3;15474:67;;;15467:74;;15574:22;15570:1;15565:3;15561:11;15554:43;15625:2;15620:3;15616:12;15609:19;;15460:174;;;;15643:332;;15803:67;15867:2;15862:3;15803:67;;;15796:74;;15903:34;15899:1;15894:3;15890:11;15883:55;15966:2;15961:3;15957:12;15950:19;;15789:186;;;;15984:371;;16144:67;16208:2;16203:3;16144:67;;;16137:74;;16244:34;16240:1;16235:3;16231:11;16224:55;16313:4;16308:2;16303:3;16299:12;16292:26;16346:2;16341:3;16337:12;16330:19;;16130:225;;;;16364:373;;16524:67;16588:2;16583:3;16524:67;;;16517:74;;16624:34;16620:1;16615:3;16611:11;16604:55;16693:6;16688:2;16683:3;16679:12;16672:28;16728:2;16723:3;16719:12;16712:19;;16510:227;;;;16745:113;16828:24;16846:5;16828:24;;;16823:3;16816:37;16810:48;;;16865:111;16946:24;16964:5;16946:24;;;16941:3;16934:37;16928:48;;;16983:152;17084:45;17104:24;17122:5;17104:24;;;17084:45;;;17079:3;17072:58;17066:69;;;17142:1384;;17623:75;17694:3;17685:6;17623:75;;;17720:2;17715:3;17711:12;17704:19;;17734:75;17805:3;17796:6;17734:75;;;17831:2;17826:3;17822:12;17815:19;;17845:121;17962:3;17953:6;17845:121;;;17988:2;17983:3;17979:12;17972:19;;18002:159;18157:3;18148:6;18002:159;;;18183:3;18178;18174:13;18167:20;;18198:121;18315:3;18306:6;18198:121;;;18341:2;18336:3;18332:12;18325:19;;18355:121;18472:3;18463:6;18355:121;;;18498:2;18493:3;18489:12;18482:19;;18518:3;18511:10;;17611:915;;;;;;;;;;18533:213;;18651:2;18640:9;18636:18;18628:26;;18665:71;18733:1;18722:9;18718:17;18709:6;18665:71;;;18622:124;;;;;18753:229;;18879:2;18868:9;18864:18;18856:26;;18893:79;18969:1;18958:9;18954:17;18945:6;18893:79;;;18850:132;;;;;18989:647;;19217:3;19206:9;19202:19;19194:27;;19232:79;19308:1;19297:9;19293:17;19284:6;19232:79;;;19322:72;19390:2;19379:9;19375:18;19366:6;19322:72;;;19405;19473:2;19462:9;19458:18;19449:6;19405:72;;;19525:9;19519:4;19515:20;19510:2;19499:9;19495:18;19488:48;19550:76;19621:4;19612:6;19550:76;;;19542:84;;19188:448;;;;;;;;19643:324;;19789:2;19778:9;19774:18;19766:26;;19803:71;19871:1;19860:9;19856:17;19847:6;19803:71;;;19885:72;19953:2;19942:9;19938:18;19929:6;19885:72;;;19760:207;;;;;;19974:201;;20086:2;20075:9;20071:18;20063:26;;20100:65;20162:1;20151:9;20147:17;20138:6;20100:65;;;20057:118;;;;;20182:435;;20356:2;20345:9;20341:18;20333:26;;20370:71;20438:1;20427:9;20423:17;20414:6;20370:71;;;20452:72;20520:2;20509:9;20505:18;20496:6;20452:72;;;20535;20603:2;20592:9;20588:18;20579:6;20535:72;;;20327:290;;;;;;;20624:301;;20762:2;20751:9;20747:18;20739:26;;20812:9;20806:4;20802:20;20798:1;20787:9;20783:17;20776:47;20837:78;20910:4;20901:6;20837:78;;;20829:86;;20733:192;;;;;20932:407;;21123:2;21112:9;21108:18;21100:26;;21173:9;21167:4;21163:20;21159:1;21148:9;21144:17;21137:47;21198:131;21324:4;21198:131;;;21190:139;;21094:245;;;;21346:407;;21537:2;21526:9;21522:18;21514:26;;21587:9;21581:4;21577:20;21573:1;21562:9;21558:17;21551:47;21612:131;21738:4;21612:131;;;21604:139;;21508:245;;;;21760:407;;21951:2;21940:9;21936:18;21928:26;;22001:9;21995:4;21991:20;21987:1;21976:9;21972:17;21965:47;22026:131;22152:4;22026:131;;;22018:139;;21922:245;;;;22174:407;;22365:2;22354:9;22350:18;22342:26;;22415:9;22409:4;22405:20;22401:1;22390:9;22386:17;22379:47;22440:131;22566:4;22440:131;;;22432:139;;22336:245;;;;22588:407;;22779:2;22768:9;22764:18;22756:26;;22829:9;22823:4;22819:20;22815:1;22804:9;22800:17;22793:47;22854:131;22980:4;22854:131;;;22846:139;;22750:245;;;;23002:407;;23193:2;23182:9;23178:18;23170:26;;23243:9;23237:4;23233:20;23229:1;23218:9;23214:17;23207:47;23268:131;23394:4;23268:131;;;23260:139;;23164:245;;;;23416:213;;23534:2;23523:9;23519:18;23511:26;;23548:71;23616:1;23605:9;23601:17;23592:6;23548:71;;;23505:124;;;;;23636:256;;23698:2;23692:9;23682:19;;23736:4;23728:6;23724:17;23835:6;23823:10;23820:22;23799:18;23787:10;23784:34;23781:62;23778:2;;;23856:1;23853;23846:12;23778:2;23876:10;23872:2;23865:22;23676:216;;;;;23899:263;;24075:18;24067:6;24064:30;24061:2;;;24107:1;24104;24097:12;24061:2;24142:4;24134:6;24130:17;24122:25;;23998:164;;;;24169:240;;24322:18;24314:6;24311:30;24308:2;;;24354:1;24351;24344:12;24308:2;24389:4;24381:6;24377:17;24369:25;;24245:164;;;;24416:244;;24573:18;24565:6;24562:30;24559:2;;;24605:1;24602;24595:12;24559:2;24640:4;24632:6;24628:17;24620:25;;24496:164;;;;24667:321;;24810:18;24802:6;24799:30;24796:2;;;24842:1;24839;24832:12;24796:2;24909:4;24905:9;24898:4;24890:6;24886:17;24882:33;24874:41;;24973:4;24967;24963:15;24955:23;;24733:255;;;;24995:322;;25139:18;25131:6;25128:30;25125:2;;;25171:1;25168;25161:12;25125:2;25238:4;25234:9;25227:4;25219:6;25215:17;25211:33;25203:41;;25302:4;25296;25292:15;25284:23;;25062:255;;;;25324:116;;25427:3;25419:11;;25413:27;;;;25447:93;;25527:3;25519:11;;25513:27;;;;25547:97;;25631:3;25623:11;;25617:27;;;;25651:127;;25764:4;25754:14;;25742:36;;;;25785:104;;25875:4;25865:14;;25853:36;;;;25896:108;;25990:4;25980:14;;25968:36;;;;26011:121;;26104:5;26098:12;26088:22;;26069:63;;;;26139:122;;26233:5;26227:12;26217:22;;26198:63;;;;26268:125;;26383:4;26378:3;26374:14;26366:22;;26360:33;;;;26400:102;;26492:4;26487:3;26483:14;26475:22;;26469:33;;;;26509:106;;26605:4;26600:3;26596:14;26588:22;;26582:33;;;;26623:177;;26791:3;26776:18;;26769:31;;;;;26809:138;;26938:3;26923:18;;26916:31;;;;;26956:158;;27105:3;27090:18;;27083:31;;;;;27123:162;;27237:6;27232:3;27225:19;27274:4;27269:3;27265:14;27250:29;;27218:67;;;;;27294:163;;27409:6;27404:3;27397:19;27446:4;27441:3;27437:14;27422:29;;27390:67;;;;;27465:91;;27527:24;27545:5;27527:24;;;27516:35;;27510:46;;;;27563:85;;27636:5;27629:13;27622:21;27611:32;;27605:43;;;;27655:72;;27717:5;27706:16;;27700:27;;;;27734:144;;27806:66;27799:5;27795:78;27784:89;;27778:100;;;;27885:121;;27958:42;27951:5;27947:54;27936:65;;27930:76;;;;28013:72;;28075:5;28064:16;;28058:27;;;;28092:129;;28179:37;28210:5;28179:37;;;28166:50;;28160:61;;;;28228:121;;28307:37;28338:5;28307:37;;;28294:50;;28288:61;;;;28356:108;;28435:24;28453:5;28435:24;;;28422:37;;28416:48;;;;28472:145;28553:6;28548:3;28543;28530:30;28609:1;28600:6;28595:3;28591:16;28584:27;28523:94;;;;28626:268;28691:1;28698:101;28712:6;28709:1;28706:13;28698:101;;;28788:1;28783:3;28779:11;28773:18;28769:1;28764:3;28760:11;28753:39;28734:2;28731:1;28727:10;28722:15;;28698:101;;;28814:6;28811:1;28808:13;28805:2;;;28879:1;28870:6;28865:3;28861:16;28854:27;28805:2;28675:219;;;;;28902:95;;28966:26;28986:5;28966:26;;;28955:37;;28949:48;;;;29004:89;;29068:20;29082:5;29068:20;;;29057:31;;29051:42;;;;29100:74;;29164:5;29153:16;;29147:27;;;;29181:97;;29269:2;29265:7;29260:2;29253:5;29249:14;29245:28;29235:38;;29229:49;;;;29286:94;;29364:5;29360:2;29356:14;29334:36;;29328:52;;;;29388:117;29457:24;29475:5;29457:24;;;29450:5;29447:35;29437:2;;29496:1;29493;29486:12;29437:2;29431:74;;29512:111;29578:21;29593:5;29578:21;;;29571:5;29568:32;29558:2;;29614:1;29611;29604:12;29558:2;29552:71;;29630:117;29699:24;29717:5;29699:24;;;29692:5;29689:35;29679:2;;29738:1;29735;29728:12;29679:2;29673:74;;29754:115;29822:23;29839:5;29822:23;;;29815:5;29812:34;29802:2;;29860:1;29857;29850:12;29802:2;29796:73;;29876:117;29945:24;29963:5;29945:24;;;29938:5;29935:35;29925:2;;29984:1;29981;29974:12;29925:2;29919:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is Verifier, ERC721MintableComplete {\n    // define a solutions struct that can hold an index & an address\n    struct Solution {\n        bytes32 index;\n        uint256 tokenId;\n        address addr;\n    }\n\n    // define an array of the above struct\n    mapping(uint256 => Solution) solutions;\n\n    // define a mapping to store unique solutions submitted\n    mapping(bytes32 => bool) submittedSolutions;\n\n    // Create an event to emit when a solution is added\n    event SolutionAdded(bytes32 key, address addr, uint256 tokenId);\n\n    // Create a function to add the solutions to the array and emit the event\n    function addSolution(\n        address addr,\n        uint256 tokenId,\n        uint256[2] memory a,\n        uint256[2][2] memory b,\n        uint256[2] memory c,\n        uint256[2] memory input\n    ) public {\n        bytes32 key = keccak256(\n            abi.encodePacked(tokenId, addr,a,b,c, input)\n        );\n        require(!submittedSolutions[key], \"The solution has been used before\");\n        bool isValid = verifyTx(a,b,c,input);\n        require(isValid, \"The proof is not valid\");\n        Solution memory solution = Solution(key, tokenId, addr);\n        solutions[tokenId] = solution;\n        submittedSolutions[key] = true;\n        emit SolutionAdded(key, addr, tokenId);\n    }\n\n    // Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mint(address addr, uint256 tokenId) public returns (bool) {\n        require(\n            solutions[tokenId].addr != address(0),\n            \"The solution has been used before\"\n        );\n        return super.mint(addr, tokenId);\n    }\n}\n",
  "sourcePath": "/Users/venkat/Documents/GitHub/blockchain-notebook/und/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7834
      ]
    },
    "id": 7835,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7687,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "id": 7688,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7689,
        "nodeType": "ImportDirective",
        "scope": 7835,
        "sourceUnit": 1418,
        "src": "67:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7690,
        "nodeType": "ImportDirective",
        "scope": 7835,
        "sourceUnit": 10393,
        "src": "98:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7691,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10392,
              "src": "354:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10392",
                "typeString": "contract Verifier"
              }
            },
            "id": 7692,
            "nodeType": "InheritanceSpecifier",
            "src": "354:8:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7693,
              "name": "ERC721MintableComplete",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1417,
              "src": "364:22:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MintableComplete_$1417",
                "typeString": "contract ERC721MintableComplete"
              }
            },
            "id": 7694,
            "nodeType": "InheritanceSpecifier",
            "src": "364:22:6"
          }
        ],
        "contractDependencies": [
          400,
          466,
          512,
          981,
          1279,
          1388,
          1417,
          7685,
          10392
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7834,
        "linearizedBaseContracts": [
          7834,
          1417,
          1388,
          7685,
          1279,
          981,
          512,
          466,
          400,
          10392
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7701,
            "members": [
              {
                "constant": false,
                "id": 7696,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7701,
                "src": "488:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7695,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "488:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7698,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7701,
                "src": "511:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7697,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "511:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7700,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7701,
                "src": "536:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7699,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "536:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7834,
            "src": "462:93:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7705,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7834,
            "src": "604:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7701_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7704,
              "keyType": {
                "id": 7702,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "612:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "604:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7701_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7703,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7701,
                "src": "623:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7701_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7709,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7834,
            "src": "709:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7708,
              "keyType": {
                "id": 7706,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "717:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "709:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7707,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "728:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7717,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7711,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7717,
                  "src": "835:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7710,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7713,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7717,
                  "src": "848:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7715,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7717,
                  "src": "862:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7714,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "834:44:6"
            },
            "src": "815:64:6"
          },
          {
            "body": {
              "id": 7804,
              "nodeType": "Block",
              "src": "1167:478:6",
              "statements": [
                {
                  "assignments": [
                    7743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7743,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7804,
                      "src": "1177:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7742,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1177:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7755,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7747,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7721,
                            "src": "1231:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7748,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7719,
                            "src": "1240:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7749,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7725,
                            "src": "1245:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7750,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7731,
                            "src": "1247:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7751,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7735,
                            "src": "1249:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7752,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7739,
                            "src": "1252:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7745,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10394,
                            "src": "1214:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1214:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1214:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7744,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10401,
                      "src": "1191:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:77:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1177:91:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1286:24:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7757,
                            "name": "submittedSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7709,
                            "src": "1287:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7759,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7758,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7743,
                            "src": "1306:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1287:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                        "id": 7761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1312:35:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        },
                        "value": "The solution has been used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        }
                      ],
                      "id": 7756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10410,
                        10411
                      ],
                      "referencedDeclaration": 10411,
                      "src": "1278:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1278:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7763,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:70:6"
                },
                {
                  "assignments": [
                    7765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7765,
                      "name": "isValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 7804,
                      "src": "1358:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7764,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1358:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7772,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7767,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7725,
                        "src": "1382:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7768,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "1384:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7769,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7735,
                        "src": "1386:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7770,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7739,
                        "src": "1388:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7766,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10391,
                      "src": "1373:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 7771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1373:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1358:36:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7774,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7765,
                        "src": "1412:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652070726f6f66206973206e6f742076616c6964",
                        "id": 7775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:24:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12c2183d5283ab5a33e069104318c0f5dfa180649ae7c355e46fda36590b49f1",
                          "typeString": "literal_string \"The proof is not valid\""
                        },
                        "value": "The proof is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12c2183d5283ab5a33e069104318c0f5dfa180649ae7c355e46fda36590b49f1",
                          "typeString": "literal_string \"The proof is not valid\""
                        }
                      ],
                      "id": 7773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10410,
                        10411
                      ],
                      "referencedDeclaration": 10411,
                      "src": "1404:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:42:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7777,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:42:6"
                },
                {
                  "assignments": [
                    7779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7779,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7804,
                      "src": "1456:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7701_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7778,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7701,
                        "src": "1456:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7701_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7785,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7781,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1492:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7782,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7721,
                        "src": "1497:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7783,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7719,
                        "src": "1506:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7780,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7701,
                      "src": "1483:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7701_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7701_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1456:55:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7786,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7705,
                        "src": "1521:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7701_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7788,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7787,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7721,
                        "src": "1531:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1521:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7701_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7789,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7779,
                      "src": "1542:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7701_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1521:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7701_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7791,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:29:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7792,
                        "name": "submittedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7709,
                        "src": "1560:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7794,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7793,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1579:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1560:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1586:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1560:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7797,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:30:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7799,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1619:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7800,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7719,
                        "src": "1624:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7801,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7721,
                        "src": "1630:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7798,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7717,
                      "src": "1605:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 7802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1605:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7803,
                  "nodeType": "EmitStatement",
                  "src": "1600:38:6"
                }
              ]
            },
            "documentation": null,
            "id": 7805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7719,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "993:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7721,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "1015:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7725,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "1040:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7722,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1040:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7724,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1048:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1040:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7731,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "1069:22:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1069:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7728,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1077:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1069:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7730,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1080:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1069:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7735,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "1101:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7732,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1101:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7734,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1109:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1101:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7739,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7805,
                  "src": "1130:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7736,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1130:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7738,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1138:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1130:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "983:176:6"
            },
            "returnParameters": {
              "id": 7741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:6"
            },
            "scope": 7834,
            "src": "963:682:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7832,
              "nodeType": "Block",
              "src": "1934:176:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7815,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7705,
                              "src": "1965:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7701_storage_$",
                                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7817,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7816,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7809,
                              "src": "1975:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1965:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7701_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7818,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7700,
                          "src": "1965:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2000:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1992:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1992:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1965:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                        "id": 7823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2016:35:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        },
                        "value": "The solution has been used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        }
                      ],
                      "id": 7814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10410,
                        10411
                      ],
                      "referencedDeclaration": 10411,
                      "src": "1944:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1944:117:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7825,
                  "nodeType": "ExpressionStatement",
                  "src": "1944:117:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7828,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7807,
                        "src": "2089:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7829,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7809,
                        "src": "2095:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7826,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10462,
                        "src": "2078:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7834",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1416,
                      "src": "2078:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7813,
                  "id": 7831,
                  "nodeType": "Return",
                  "src": "2071:32:6"
                }
              ]
            },
            "documentation": null,
            "id": 7833,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7807,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "1881:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7809,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "1895:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1880:31:6"
            },
            "returnParameters": {
              "id": 7813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7812,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7833,
                  "src": "1928:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7811,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1927:6:6"
            },
            "scope": 7834,
            "src": "1867:243:6",
            "stateMutability": "nonpayable",
            "superFunction": 1416,
            "visibility": "public"
          }
        ],
        "scope": 7835,
        "src": "323:1789:6"
      }
    ],
    "src": "0:2113:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7834
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7687,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7688,
        "name": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 1418,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7835,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7689,
        "name": "ImportDirective",
        "src": "67:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 10393,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7835,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7690,
        "name": "ImportDirective",
        "src": "98:24:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            400,
            466,
            512,
            981,
            1279,
            1388,
            1417,
            7685,
            10392
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7834,
            1417,
            1388,
            7685,
            1279,
            981,
            512,
            466,
            400,
            10392
          ],
          "name": "SolnSquareVerifier",
          "scope": 7835
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10392,
                  "type": "contract Verifier"
                },
                "id": 7691,
                "name": "UserDefinedTypeName",
                "src": "354:8:6"
              }
            ],
            "id": 7692,
            "name": "InheritanceSpecifier",
            "src": "354:8:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721MintableComplete",
                  "referencedDeclaration": 1417,
                  "type": "contract ERC721MintableComplete"
                },
                "id": 7693,
                "name": "UserDefinedTypeName",
                "src": "364:22:6"
              }
            ],
            "id": 7694,
            "name": "InheritanceSpecifier",
            "src": "364:22:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7834,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7701,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7695,
                    "name": "ElementaryTypeName",
                    "src": "488:7:6"
                  }
                ],
                "id": 7696,
                "name": "VariableDeclaration",
                "src": "488:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "tokenId",
                  "scope": 7701,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7697,
                    "name": "ElementaryTypeName",
                    "src": "511:7:6"
                  }
                ],
                "id": 7698,
                "name": "VariableDeclaration",
                "src": "511:15:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "addr",
                  "scope": 7701,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7699,
                    "name": "ElementaryTypeName",
                    "src": "536:7:6"
                  }
                ],
                "id": 7700,
                "name": "VariableDeclaration",
                "src": "536:12:6"
              }
            ],
            "id": 7701,
            "name": "StructDefinition",
            "src": "462:93:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7834,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7702,
                    "name": "ElementaryTypeName",
                    "src": "612:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7701,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7703,
                    "name": "UserDefinedTypeName",
                    "src": "623:8:6"
                  }
                ],
                "id": 7704,
                "name": "Mapping",
                "src": "604:28:6"
              }
            ],
            "id": 7705,
            "name": "VariableDeclaration",
            "src": "604:38:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "submittedSolutions",
              "scope": 7834,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7706,
                    "name": "ElementaryTypeName",
                    "src": "717:7:6"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7707,
                    "name": "ElementaryTypeName",
                    "src": "728:4:6"
                  }
                ],
                "id": 7708,
                "name": "Mapping",
                "src": "709:24:6"
              }
            ],
            "id": 7709,
            "name": "VariableDeclaration",
            "src": "709:43:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "key",
                      "scope": 7717,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7710,
                        "name": "ElementaryTypeName",
                        "src": "835:7:6"
                      }
                    ],
                    "id": 7711,
                    "name": "VariableDeclaration",
                    "src": "835:11:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "addr",
                      "scope": 7717,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7712,
                        "name": "ElementaryTypeName",
                        "src": "848:7:6"
                      }
                    ],
                    "id": 7713,
                    "name": "VariableDeclaration",
                    "src": "848:12:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "tokenId",
                      "scope": 7717,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7714,
                        "name": "ElementaryTypeName",
                        "src": "862:7:6"
                      }
                    ],
                    "id": 7715,
                    "name": "VariableDeclaration",
                    "src": "862:15:6"
                  }
                ],
                "id": 7716,
                "name": "ParameterList",
                "src": "834:44:6"
              }
            ],
            "id": 7717,
            "name": "EventDefinition",
            "src": "815:64:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7834,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 7805,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7718,
                        "name": "ElementaryTypeName",
                        "src": "993:7:6"
                      }
                    ],
                    "id": 7719,
                    "name": "VariableDeclaration",
                    "src": "993:12:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7805,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7720,
                        "name": "ElementaryTypeName",
                        "src": "1015:7:6"
                      }
                    ],
                    "id": 7721,
                    "name": "VariableDeclaration",
                    "src": "1015:15:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7805,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7722,
                            "name": "ElementaryTypeName",
                            "src": "1040:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7723,
                            "name": "Literal",
                            "src": "1048:1:6"
                          }
                        ],
                        "id": 7724,
                        "name": "ArrayTypeName",
                        "src": "1040:10:6"
                      }
                    ],
                    "id": 7725,
                    "name": "VariableDeclaration",
                    "src": "1040:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7805,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 7726,
                                "name": "ElementaryTypeName",
                                "src": "1069:7:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7727,
                                "name": "Literal",
                                "src": "1077:1:6"
                              }
                            ],
                            "id": 7728,
                            "name": "ArrayTypeName",
                            "src": "1069:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7729,
                            "name": "Literal",
                            "src": "1080:1:6"
                          }
                        ],
                        "id": 7730,
                        "name": "ArrayTypeName",
                        "src": "1069:13:6"
                      }
                    ],
                    "id": 7731,
                    "name": "VariableDeclaration",
                    "src": "1069:22:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7805,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7732,
                            "name": "ElementaryTypeName",
                            "src": "1101:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7733,
                            "name": "Literal",
                            "src": "1109:1:6"
                          }
                        ],
                        "id": 7734,
                        "name": "ArrayTypeName",
                        "src": "1101:10:6"
                      }
                    ],
                    "id": 7735,
                    "name": "VariableDeclaration",
                    "src": "1101:19:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7805,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7736,
                            "name": "ElementaryTypeName",
                            "src": "1130:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7737,
                            "name": "Literal",
                            "src": "1138:1:6"
                          }
                        ],
                        "id": 7738,
                        "name": "ArrayTypeName",
                        "src": "1130:10:6"
                      }
                    ],
                    "id": 7739,
                    "name": "VariableDeclaration",
                    "src": "1130:23:6"
                  }
                ],
                "id": 7740,
                "name": "ParameterList",
                "src": "983:176:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7741,
                "name": "ParameterList",
                "src": "1167:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7743
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7804,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7742,
                            "name": "ElementaryTypeName",
                            "src": "1177:7:6"
                          }
                        ],
                        "id": 7743,
                        "name": "VariableDeclaration",
                        "src": "1177:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10401,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7744,
                            "name": "Identifier",
                            "src": "1191:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10394,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7745,
                                    "name": "Identifier",
                                    "src": "1214:3:6"
                                  }
                                ],
                                "id": 7746,
                                "name": "MemberAccess",
                                "src": "1214:16:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7721,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7747,
                                "name": "Identifier",
                                "src": "1231:7:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7719,
                                  "type": "address",
                                  "value": "addr"
                                },
                                "id": 7748,
                                "name": "Identifier",
                                "src": "1240:4:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7725,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7749,
                                "name": "Identifier",
                                "src": "1245:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7731,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7750,
                                "name": "Identifier",
                                "src": "1247:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7735,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7751,
                                "name": "Identifier",
                                "src": "1249:1:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7739,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7752,
                                "name": "Identifier",
                                "src": "1252:5:6"
                              }
                            ],
                            "id": 7753,
                            "name": "FunctionCall",
                            "src": "1214:44:6"
                          }
                        ],
                        "id": 7754,
                        "name": "FunctionCall",
                        "src": "1191:77:6"
                      }
                    ],
                    "id": 7755,
                    "name": "VariableDeclarationStatement",
                    "src": "1177:91:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                                  "typeString": "literal_string \"The solution has been used before\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10410,
                                10411
                              ],
                              "referencedDeclaration": 10411,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7756,
                            "name": "Identifier",
                            "src": "1278:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7709,
                                      "type": "mapping(bytes32 => bool)",
                                      "value": "submittedSolutions"
                                    },
                                    "id": 7757,
                                    "name": "Identifier",
                                    "src": "1287:18:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7743,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7758,
                                    "name": "Identifier",
                                    "src": "1306:3:6"
                                  }
                                ],
                                "id": 7759,
                                "name": "IndexAccess",
                                "src": "1287:23:6"
                              }
                            ],
                            "id": 7760,
                            "name": "UnaryOperation",
                            "src": "1286:24:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The solution has been used before\"",
                              "value": "The solution has been used before"
                            },
                            "id": 7761,
                            "name": "Literal",
                            "src": "1312:35:6"
                          }
                        ],
                        "id": 7762,
                        "name": "FunctionCall",
                        "src": "1278:70:6"
                      }
                    ],
                    "id": 7763,
                    "name": "ExpressionStatement",
                    "src": "1278:70:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7765
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "isValid",
                          "scope": 7804,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7764,
                            "name": "ElementaryTypeName",
                            "src": "1358:4:6"
                          }
                        ],
                        "id": 7765,
                        "name": "VariableDeclaration",
                        "src": "1358:12:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10391,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)",
                              "value": "verifyTx"
                            },
                            "id": 7766,
                            "name": "Identifier",
                            "src": "1373:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7725,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7767,
                            "name": "Identifier",
                            "src": "1382:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7731,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7768,
                            "name": "Identifier",
                            "src": "1384:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7735,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7769,
                            "name": "Identifier",
                            "src": "1386:1:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7739,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7770,
                            "name": "Identifier",
                            "src": "1388:5:6"
                          }
                        ],
                        "id": 7771,
                        "name": "FunctionCall",
                        "src": "1373:21:6"
                      }
                    ],
                    "id": 7772,
                    "name": "VariableDeclarationStatement",
                    "src": "1358:36:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_12c2183d5283ab5a33e069104318c0f5dfa180649ae7c355e46fda36590b49f1",
                                  "typeString": "literal_string \"The proof is not valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10410,
                                10411
                              ],
                              "referencedDeclaration": 10411,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7773,
                            "name": "Identifier",
                            "src": "1404:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7765,
                              "type": "bool",
                              "value": "isValid"
                            },
                            "id": 7774,
                            "name": "Identifier",
                            "src": "1412:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468652070726f6f66206973206e6f742076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The proof is not valid\"",
                              "value": "The proof is not valid"
                            },
                            "id": 7775,
                            "name": "Literal",
                            "src": "1421:24:6"
                          }
                        ],
                        "id": 7776,
                        "name": "FunctionCall",
                        "src": "1404:42:6"
                      }
                    ],
                    "id": 7777,
                    "name": "ExpressionStatement",
                    "src": "1404:42:6"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7779
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7804,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7701,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7778,
                            "name": "UserDefinedTypeName",
                            "src": "1456:8:6"
                          }
                        ],
                        "id": 7779,
                        "name": "VariableDeclaration",
                        "src": "1456:24:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7701,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7780,
                            "name": "Identifier",
                            "src": "1483:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7743,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7781,
                            "name": "Identifier",
                            "src": "1492:3:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7721,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7782,
                            "name": "Identifier",
                            "src": "1497:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7719,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7783,
                            "name": "Identifier",
                            "src": "1506:4:6"
                          }
                        ],
                        "id": 7784,
                        "name": "FunctionCall",
                        "src": "1483:28:6"
                      }
                    ],
                    "id": 7785,
                    "name": "VariableDeclarationStatement",
                    "src": "1456:55:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7705,
                                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutions"
                                },
                                "id": 7786,
                                "name": "Identifier",
                                "src": "1521:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7721,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7787,
                                "name": "Identifier",
                                "src": "1531:7:6"
                              }
                            ],
                            "id": 7788,
                            "name": "IndexAccess",
                            "src": "1521:18:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7779,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7789,
                            "name": "Identifier",
                            "src": "1542:8:6"
                          }
                        ],
                        "id": 7790,
                        "name": "Assignment",
                        "src": "1521:29:6"
                      }
                    ],
                    "id": 7791,
                    "name": "ExpressionStatement",
                    "src": "1521:29:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7709,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "submittedSolutions"
                                },
                                "id": 7792,
                                "name": "Identifier",
                                "src": "1560:18:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7743,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7793,
                                "name": "Identifier",
                                "src": "1579:3:6"
                              }
                            ],
                            "id": 7794,
                            "name": "IndexAccess",
                            "src": "1560:23:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7795,
                            "name": "Literal",
                            "src": "1586:4:6"
                          }
                        ],
                        "id": 7796,
                        "name": "Assignment",
                        "src": "1560:30:6"
                      }
                    ],
                    "id": 7797,
                    "name": "ExpressionStatement",
                    "src": "1560:30:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7717,
                              "type": "function (bytes32,address,uint256)",
                              "value": "SolutionAdded"
                            },
                            "id": 7798,
                            "name": "Identifier",
                            "src": "1605:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7743,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7799,
                            "name": "Identifier",
                            "src": "1619:3:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7719,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7800,
                            "name": "Identifier",
                            "src": "1624:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7721,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7801,
                            "name": "Identifier",
                            "src": "1630:7:6"
                          }
                        ],
                        "id": 7802,
                        "name": "FunctionCall",
                        "src": "1605:33:6"
                      }
                    ],
                    "id": 7803,
                    "name": "EmitStatement",
                    "src": "1600:38:6"
                  }
                ],
                "id": 7804,
                "name": "Block",
                "src": "1167:478:6"
              }
            ],
            "id": 7805,
            "name": "FunctionDefinition",
            "src": "963:682:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 7834,
              "stateMutability": "nonpayable",
              "superFunction": 1416,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 7833,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7806,
                        "name": "ElementaryTypeName",
                        "src": "1881:7:6"
                      }
                    ],
                    "id": 7807,
                    "name": "VariableDeclaration",
                    "src": "1881:12:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7833,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7808,
                        "name": "ElementaryTypeName",
                        "src": "1895:7:6"
                      }
                    ],
                    "id": 7809,
                    "name": "VariableDeclaration",
                    "src": "1895:15:6"
                  }
                ],
                "id": 7810,
                "name": "ParameterList",
                "src": "1880:31:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7833,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7811,
                        "name": "ElementaryTypeName",
                        "src": "1928:4:6"
                      }
                    ],
                    "id": 7812,
                    "name": "VariableDeclaration",
                    "src": "1928:4:6"
                  }
                ],
                "id": 7813,
                "name": "ParameterList",
                "src": "1927:6:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                                  "typeString": "literal_string \"The solution has been used before\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10410,
                                10411
                              ],
                              "referencedDeclaration": 10411,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7814,
                            "name": "Identifier",
                            "src": "1944:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "addr",
                                  "referencedDeclaration": 7700,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7705,
                                          "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutions"
                                        },
                                        "id": 7815,
                                        "name": "Identifier",
                                        "src": "1965:9:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7809,
                                          "type": "uint256",
                                          "value": "tokenId"
                                        },
                                        "id": 7816,
                                        "name": "Identifier",
                                        "src": "1975:7:6"
                                      }
                                    ],
                                    "id": 7817,
                                    "name": "IndexAccess",
                                    "src": "1965:18:6"
                                  }
                                ],
                                "id": 7818,
                                "name": "MemberAccess",
                                "src": "1965:23:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7819,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1992:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7820,
                                    "name": "Literal",
                                    "src": "2000:1:6"
                                  }
                                ],
                                "id": 7821,
                                "name": "FunctionCall",
                                "src": "1992:10:6"
                              }
                            ],
                            "id": 7822,
                            "name": "BinaryOperation",
                            "src": "1965:37:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The solution has been used before\"",
                              "value": "The solution has been used before"
                            },
                            "id": 7823,
                            "name": "Literal",
                            "src": "2016:35:6"
                          }
                        ],
                        "id": 7824,
                        "name": "FunctionCall",
                        "src": "1944:117:6"
                      }
                    ],
                    "id": 7825,
                    "name": "ExpressionStatement",
                    "src": "1944:117:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7813
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1416,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10462,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7826,
                                "name": "Identifier",
                                "src": "2078:5:6"
                              }
                            ],
                            "id": 7827,
                            "name": "MemberAccess",
                            "src": "2078:10:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7807,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7828,
                            "name": "Identifier",
                            "src": "2089:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7809,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7829,
                            "name": "Identifier",
                            "src": "2095:7:6"
                          }
                        ],
                        "id": 7830,
                        "name": "FunctionCall",
                        "src": "2078:25:6"
                      }
                    ],
                    "id": 7831,
                    "name": "Return",
                    "src": "2071:32:6"
                  }
                ],
                "id": 7832,
                "name": "Block",
                "src": "1934:176:6"
              }
            ],
            "id": 7833,
            "name": "FunctionDefinition",
            "src": "1867:243:6"
          }
        ],
        "id": 7834,
        "name": "ContractDefinition",
        "src": "323:1789:6"
      }
    ],
    "id": 7835,
    "name": "SourceUnit",
    "src": "0:2113:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xb354352DcA377A9082B88fd8b679f52e17365172",
      "transactionHash": "0x9f50ffee098aa81eb740fcdc48de7e196bc0baf270b2f6a4d92c5e7608c069de"
    },
    "5": {
      "events": {},
      "links": {},
      "address": "0x80B3ae0cA7bdc76b2c9d44F3Fef009b9958Ee0c9",
      "transactionHash": "0x812e69f9229c849941ef97189819f67d4794efbb7b2a3ccd5b0954a9b66e5278"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x91FF7bD733fBABe47D73d3647feeb581D574a919",
      "transactionHash": "0x371b69c62c28a04a316bc8206a5b613144df882eee77221ed1dbcc935d372bc6"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-17T06:15:19.683Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}